{"version":3,"sources":["components/Media/Landing.mp4","pages/Validation/Valid.jsx","pages/RegisterPage/RegistrationPage.jsx","pages/LoginPage/LoginPage.jsx","pages/LandingPage.jsx","pages/RegisterMetrics/MetricsPage1.jsx","pages/RegisterMetrics/MetricsPage2.jsx","pages/RegisterMetrics/MetricsPage3.jsx","pages/RegisterMetrics/MetricsPage4.jsx","components/SessionPages/PreSessionPage/WeekdaysBar.jsx","components/SessionPages/PreSessionPage/PreSessionPage.jsx","components/SessionPages/SessionPage/StepperProgress.jsx","components/SessionPages/trainingTime.js","components/SessionPages/SessionPage/Timer.jsx","components/SessionPages/SessionPage/TableSession/DataTableRow.jsx","components/SessionPages/SessionPage/TableSession/TableSession.jsx","components/SessionPages/SessionPage/SessionPage.jsx","components/SessionPages/SessionResultsPage.jsx","pages/ProgressPage.jsx","pages/TrainingPlans/TemplateTrainCard.jsx","pages/TrainingPlans/ExercisesAccordion.jsx","pages/TrainingPlans/ExercisesInPlan.jsx","pages/TrainingPlans/PlanDays.jsx","pages/TrainingPlans/PlanViewer.jsx","pages/MyTrainingPlan.jsx","pages/HistoryPage.jsx","pages/ChangingPassword/StatusChangePassword.jsx","pages/SettingsPage.jsx","components/trainingHistory/HistoryTemplate.jsx","components/trainingHistory/TrainingHistoryPage.jsx","components/AuthedContent.jsx","pages/RegisterMetrics/RegisterCardPage.jsx","pages/RegisterMetrics/RegisterMetrics.jsx","components/Navigation.jsx","pages/RecoverPassword/InputEmailPage.jsx","pages/RecoverPassword/ResetPage.jsx","pages/RecoverPassword/RecoverPasswordPage.jsx","App.js","redux/reducers/rootReducer.js","redux/actionTypes.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","isEmailValid","email","test","String","toLowerCase","isPasswordValid","password","RegistrationPage","_useState","useState","_useState2","Object","slicedToArray","inputPassword1","setinputPassword1","_useState3","_useState4","inputPassword2","setinputPassword2","_useState5","_useState6","inputName","setInputName","_useState7","_useState8","isValidEmail","setValidEmail","_useState9","_useState10","isValidLogin","setValidLogin","_useState11","_useState12","redirect","setRedirect","react_default","a","createElement","Container","className","Card","style","margin","color","fontFamily","lineHeight","fontSize","padding","maxHeight","maxWidth","display","justifyContent","flexDirection","textAlign","Typography","variant","component","action","Box","my","TextField","required","id","autoComplete","value","onChange","e","target","label","error","length","helperText","type","dis","Button","disabled","onClick","userData","UserLogin","Password","Name","Email","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","text","width","height","marginTop","react_router","to","LoginPage","_ref","setUser","loginValue","setLoginValue","isLoginDirty","setIsLoginDirty","passwordValue","setPasswordValue","isPasswordDirty","setIsPasswordDirty","isPasswordShowing","setIsPasswordShowing","isAuthed","setIsAuthed","useEffect","isLoginValid","login","fullWidth","onBlur","mb","InputProps","endAdornment","InputAdornment","IconButton","Visibility_default","VisibilityOff_default","requestBody","status","data","candidate","parse","localStorage","setItem","name","classes","loginButton","mt","react_router_dom","useStyles","makeStyles","theme","videoLanding","LandingPage","flexGrow","autoPlay","loop","muted","src","Powerslap","MetricsPage1","props","_React$useState","React","_React$useState2","MetricHeight","setMetricHeight","_React$useState3","_React$useState4","MetricWeight","setMetricWeight","_React$useState5","_React$useState6","MetricAge","setMetricAge","DataMetricsUser","setValidPage","MetricsPage2","MetricGoal","setMetricGoal","onClickHandle","RadioGroup","aria-label","FormControlLabel","control","Radio","size","MetricsPage3","MetricHealth","collectingHealthMetricsInObject","Problem","checked","push","splice","indexOf","Checkbox","MetricsPage4","MetricPushUps","setMetricPushUps","MetricPullUps","setMetricPullUps","WeekdaysBar","currentDayIndex","setCurrentDayIndex","ButtonGroup","isPlanDay","isActive","map","item","index","key","backgroundColor","borderRightColor","connect","state","user","trainingPlan","setTrainingPlan","console","log","concat","activePlanId","json","prevState","cloneState","pt","muscleGroupName","Grid","container","spacing","flexWrap","overflowX","paddingTop","excercises","exerciseItem","_React$createElement","minWidth","sm","CardActionArea","CardMedia","image","defineProperty","photo","CardContent","align","paragraph","description","root","ProgressMobileStepper","handleBack","handleNext","page","pageAmount","currentTrainingExercises","setTonnageAccum","MobileStepper","steps","position","activeStep","backButton","KeyboardArrowLeft_default","nextButton","filteredData","slice","flat","filter","trainingPlanId","planId","muscleGroupId","exercises","el","kg","quantity","currentSessionTonnage","reduce","accum","handleSubmit","KeyboardArrowRight_default","timeInSeconds","incTimeInSeconds","getTimeInSeconds","Timer","setTrainingTimeInSeconds","hours","setHours","minutes","setMinutes","seconds","setSeconds","setSwopWatchInSeconds","myInterval","setInterval","clearInterval","Paper","Alarm_default","verticalAlign","marginRight","customTextField","& input::placeholder","fontWeight","makeDataRow","arguments","undefined","exerciseId","stamp","Date","setDate","getDate","fullDate","getFullYear","getMonth","getHours","getMinutes","getSeconds","startTime","endTime","DataRow","rowIndex","_ref$prevWeight","prevWeight","_ref$prevQuantity","prevQuantity","setCurrentTrainingExercises","isDisabled","setEnabledRows","rowData","weightValue","setWeightValue","quantityValue","setQuantityValue","inputChangeHandle","setStateHandle","inputValue","currentTarget","Math","floor","TableRow","TableCell","scope","prevEnabledRows","prevArray","cloneArray","placeholder","inputProps","max","min","table","TableSession","enabledRows","TableContainer","Table","TableHead","TableBody","Array","from","setsNumber","_","SessionPage","excercisesWithZeroValue","excerciseItem","fill","setPage","setPreviousTraining","excerciseOnPage","marginBottom","md","prevPage","implementation","smDown","Hidden","sm-offset","motivationalHeadline","SesstionResults","tonnageAccum","TrainingTimeInSeconds","valueRating","setValueRating","gutterBottom","random","TimelapseTwoTone_default","FitnessCenterTwoTone_default","Rating","event","newValue","Loading","& > * + *","marginLeft","BootScreen","minHeight","wrapper","alignItems","Header","button","formControl","ProgressPage","setData","tableState","setTableState","tableStateWeight","setTableStateWeight","loading","SetLoading","Period","setPeriod","open","setOpen","UserId","Step","setTimeout","arrayLabels","arrayData","labels","datasets","lineTension","borderColor","borderWidth","class","keys","FormControl","InputLabel","Select","labelId","onClose","onOpen","defaultValue","MenuItem","index_modern","options","title","legend","CircularProgress","cursor","transition","background","boxShadow","&:hover","transform","isActiveCard","descr","top","left","WebkitTransition","opacity","Wrapper","&:hover descr","PlanName","countBgImage","bgImage","MyTrainingPlan","pathname","propsSearch","plan","PlanId","idPlan","SetIdPlan","backgroundImage","backgroundSize","backgroundRepeat","paper","secondaryTail","palette","secondary","main","Accordion","withStyles","border","&:not(:last-child)","borderBottom","&:before","&$expanded","expanded","MuiAccordion","AccordionSummary","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","ExercisesAccordion","panel","setExpanded","ExercisesAccordion_Accordion","square","newExpanded","ExercisesAccordion_AccordionSummary","aria-controls","ExercisesAccordion_AccordionDetails","ExercisesInPlan","day","TimelineItem","TimelineSeparator","trainings","TimelineDot","FitnessCenterOutlined_default","Bathtub_default","TimelineConnector","TimelineContent","elevation","PlanDays","Alert","assign","ContainnerExercieses","SaveButton","PlanViewer","handleClose","reason","location","planName","planDescription","Timeline","newPlan","updateUser","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","PlanViewer_Alert","severity","Heading","textTransform","&:after","zIndex","li","listStyleType","headerH1","PlanConstructor","isGoals","Похудение","Набор мышечной массы","SetLoading2","isGoal","setIsGoal","plans","setPlans","metricGoal","toString","disableElevation","statusChangePassword","orange","getContrastText","deepOrange","child","Avatar","Buttons","ButtonExit","input","popover","pointerEvents","HintToMetrica","ChangeYourPassword","Goals","SettingsPage","UserMetrics","setUserMetrics","SaveUpdateButton","setSaveUpdateButton","isComponentChangePassword","setIsComponentChangePage","inputCodeFromEmail","setInputCodeFromEmail","_useState13","_useState14","_useState15","_useState16","setStatusChangePassword","anchorEl","setAnchorEl","updateDataOfUSer","metricAge","metricWeight","metricHeight","handlePopoverClose","Boolean","previsComponentChangePassword","StatusChangePassword_statusChangePassword","ConfirmPassword","Code","htmlFor","Input","startAdornment","AccountCircle_default","select","option","toFixed","HelpTwoTone_default","onMouseEnter","onMouseLeave","aria-owns","aria-haspopup","Popover","transformOrigin","disableRestoreFocus","lib_default","healthProblems","window","reload","TemplateHistoryTrain","date","tonnage","expandIcon","ExpandMore_default","px","exserciseName","weight","TrainingHistoryPage","periodValue","isLoaded","setIsLoaded","trainingDays","setTrainingDays","CurrentDate","reverse","historyItem","split","HistoryTemplate_TemplateHistoryTrain","appBar","drawer","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","breakpoints","up","toolbar","objectSpread","mixins","menuButton","MiniDrawer","_clsx2","_clsx3","useTheme","activeElementMenu","setActiveElementMenu","CssBaseline","AppBar","clsx","Toolbar","edge","Menu_default","noWrap","Drawer","direction","ChevronRight_default","ChevronLeft_default","Divider","List","ListItem","selected","ListItemIcon","OutlinedFlagRounded_default","ListItemText","primary","TrendingUpOutlined_default","ExploreOutlined_default","HistoryOutlined_default","SettingsOutlined_default","exact","path","pages_ProgressPage","MyTrainingPlan_MyTrainingPlan","PreSessionPage_PreSessionPage","RegisterCardPage","registrationPage","SetButtonNextorEnd","arr","RegisterMetrics_MetricsPage1","setMetricObject","MetricObject","validPage","RegisterMetrics_MetricsPage2","RegisterMetrics_MetricsPage3","RegisterMetrics_MetricsPage4","isMetricscollected","float","m","setregistrationPage","prevregistrationPage","innerHTML","setisMetricscollected","ButtonNextorEnd","RegisterMetrics","_React$useState7","_React$useState8","RegisterMetrics_RegisterCardPage","Navigation","textDecoration","mr","RecoverPasswordPage","setEmail","setStatus","statusSend","setstatusSend","ResetPage_RecoverPasswordPage","App","localUser","getItem","RegisterMetrics_RegisterMetrics","components_Navigation","rootReducer","combineReducers","payload","lastTraining","last_training","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.11c6b181.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Landing.de88fc5d.mp4\";","export function isEmailValid(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  // return re.test(String(email).toLowerCase());\r\n  return !re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function isPasswordValid(password) {\r\n  const re = /(?=.*\\d)(?=.*[A-ZА-ЯЁ])(?=.*[a-zа-яё]).{8,}/;\r\n  return !re.test(String(password));\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, TextField, Box, Container, Card, Typography } from '@material-ui/core';\r\nimport './RegisterPageStyle/stylesheet.css';\r\nimport { Redirect } from 'react-router';\r\nimport { isEmailValid, isPasswordValid } from '../Validation/Valid';\r\n\r\nfunction RegistrationPage() {\r\n  function handleSubmit(e) {\r\n    let userData = {\r\n      UserLogin: isValidLogin,\r\n      Password: inputPassword1,\r\n      Name: inputName,\r\n      Email: isValidEmail,\r\n    };\r\n\r\n    e.preventDefault();\r\n    fetch('http://fitness-app.germanywestcentral.cloudapp.azure.com/api/reg', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    }).then((res) => res.text());\r\n    // .then((data) => console.log(data));\r\n\r\n    setRedirect(true);\r\n  }\r\n\r\n  const [inputPassword1, setinputPassword1] = useState('');\r\n\r\n  const [inputPassword2, setinputPassword2] = useState('');\r\n\r\n  const [inputName, setInputName] = useState('');\r\n\r\n  const [isValidEmail, setValidEmail] = useState('');\r\n\r\n  const [isValidLogin, setValidLogin] = useState('');\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"Card\">\r\n        <Card\r\n          style={{\r\n            margin: '0 auto',\r\n            color: '#8E8E8E',\r\n            fontFamily: 'Roboto',\r\n            lineHeight: '50px',\r\n            fontSize: '18px',\r\n            padding: '50px 105px',\r\n            maxHeight: '486px',\r\n            maxWidth: '500px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            textAlign: 'center',\r\n          }}>\r\n          <Typography variant=\"h5\" component=\"h2\" style={{ color: 'black' }}>\r\n            Добро пожаловать\r\n          </Typography>\r\n          <form action=\"POST\">\r\n            <Box my={2}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                value={inputName}\r\n                onChange={(e) => {\r\n                  setInputName(e.target.value);\r\n                }}\r\n                label=\"Имя\"\r\n              />\r\n            </Box>\r\n\r\n            <Box my={2}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                value={isValidLogin}\r\n                onChange={(e) => {\r\n                  setValidLogin(e.target.value);\r\n                }}\r\n                error={isValidLogin.length < 6 ? (isValidLogin === '' ? false : true) : false}\r\n                helperText={\r\n                  isValidLogin.length < 6\r\n                    ? isValidLogin === ''\r\n                      ? true\r\n                      : 'Укажите более 6 символов'\r\n                    : true\r\n                }\r\n                label=\"Логин\"\r\n              />\r\n            </Box>\r\n\r\n            <Box my={2}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                label=\"Почта\"\r\n                value={isValidEmail}\r\n                error={isEmailValid(isValidEmail) ? (isValidEmail === '' ? false : true) : false}\r\n                onChange={(e) => {\r\n                  isEmailValid(setValidEmail(e.target.value));\r\n                }}\r\n                helperText={\r\n                  isEmailValid(isValidEmail)\r\n                    ? isValidEmail === ''\r\n                      ? false\r\n                      : 'Формат example@mail.ru'\r\n                    : false\r\n                }\r\n              />\r\n            </Box>\r\n            <Box my={2}>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                label=\"Пароль\"\r\n                value={inputPassword1}\r\n                onChange={(e) => {\r\n                  setinputPassword1(e.target.value);\r\n                }}\r\n                error={\r\n                  isPasswordValid(inputPassword1) ? (inputPassword1 === '' ? false : true) : false\r\n                }\r\n                helperText={\r\n                  isPasswordValid(inputPassword1) ? (\r\n                    inputPassword1 === '' ? (\r\n                      false\r\n                    ) : (\r\n                      <p>\r\n                        Пароль должен быть не короче\r\n                        <br /> 8 символов и содержать строч-\r\n                        <br />\r\n                        ную и заглавную буквы и цифру\r\n                      </p>\r\n                    )\r\n                  ) : (\r\n                    false\r\n                  )\r\n                }\r\n                type=\"password\"\r\n              />\r\n            </Box>\r\n            <Box my={2} dis>\r\n              <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"false\"\r\n                label=\"Повторите пароль\"\r\n                value={inputPassword2}\r\n                onChange={(e) => {\r\n                  setinputPassword2(e.target.value);\r\n                }}\r\n                type=\"password\"\r\n                error={\r\n                  inputPassword1 !== inputPassword2 && inputPassword2.length > 0 ? true : false\r\n                }\r\n                helperText={\r\n                  inputPassword1 !== inputPassword2\r\n                    ? inputPassword2 !== ''\r\n                      ? 'Пароли не совпадают'\r\n                      : ''\r\n                    : false\r\n                }\r\n              />\r\n            </Box>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={\r\n                  inputPassword1 !== inputPassword2 ||\r\n                  isValidLogin.length < 6 ||\r\n                  inputPassword1.length < 1\r\n                    ? true\r\n                    : false\r\n                }\r\n                onClick={handleSubmit}\r\n                style={{ width: '200px', height: '45px', marginTop: '30px' }}>\r\n                Зарегестрироваться\r\n              </Button>\r\n              {redirect === true ? (\r\n                <Box>\r\n                  <Redirect to=\"/login\" />\r\n                </Box>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n","import React from 'react';\r\nimport classes from './LoginPage.module.css';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { Link, Route } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Container,\r\n  Checkbox,\r\n  InputAdornment,\r\n  IconButton,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nexport default function LoginPage({ setUser }) {\r\n  const [loginValue, setLoginValue] = useState('');\r\n  const [isLoginDirty, setIsLoginDirty] = useState(false);\r\n\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const [isPasswordDirty, setIsPasswordDirty] = useState(false);\r\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\r\n\r\n  const [isAuthed, setIsAuthed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthed) {\r\n      // alert(1);\r\n    } else {\r\n      // alert(0);\r\n    }\r\n  }, [isAuthed]);\r\n\r\n  const isPasswordValid = (password) => {\r\n    return password.length >= 6;\r\n  };\r\n\r\n  const isLoginValid = (login) => {\r\n    return login.length > 4;\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const requestBody = {\r\n      UserLogin: loginValue,\r\n      Password: passwordValue,\r\n    };\r\n\r\n    fetch('http://fitness-app.germanywestcentral.cloudapp.azure.com/api/login', {\r\n      method: 'POST',\r\n      redirect: 'follow',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.text();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        try {\r\n          const candidate = JSON.parse(data);\r\n\r\n          if (candidate) {\r\n            setUser(candidate);\r\n            localStorage.setItem('user', JSON.stringify(candidate));\r\n          }\r\n\r\n          if (candidate.name) {\r\n            setIsAuthed(true);\r\n          }\r\n        } catch (error) {\r\n          throw error;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ textAlign: 'center', padding: '48px 64x' }}>\r\n        <h1>Авторизация</h1>\r\n\r\n        <form action=\"/\">\r\n          <Box my={3}>\r\n            <TextField\r\n              value={loginValue}\r\n              onChange={(e) => {\r\n                setLoginValue(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              type=\"email\"\r\n              fullWidth={true}\r\n              error={isLoginDirty && !isLoginValid(loginValue)}\r\n              helperText={\r\n                isLoginDirty && loginValue === ''\r\n                  ? 'введите логин'\r\n                  : isLoginDirty && !isLoginValid(loginValue)\r\n                  ? 'логен должен быть более 4 символов'\r\n                  : ''\r\n              }\r\n              variant=\"outlined\"\r\n              autoComplete=\"false\"\r\n              label=\"Логин\"\r\n              onBlur={(e) => {\r\n                if (!isLoginDirty) setIsLoginDirty(true);\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              error={isPasswordDirty && !isPasswordValid(passwordValue)}\r\n              helperText={\r\n                isPasswordDirty && passwordValue === ''\r\n                  ? 'введите пароль'\r\n                  : isPasswordDirty && !isPasswordValid(passwordValue)\r\n                  ? 'Введите корректный пароль'\r\n                  : ''\r\n              }\r\n              onBlur={(e) => {\r\n                if (!isLoginDirty) setIsLoginDirty(true);\r\n                if (!isPasswordDirty) setIsPasswordDirty(true);\r\n              }}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsPasswordShowing((isPasswordShowing) => !isPasswordShowing)\r\n                      }>\r\n                      {isPasswordShowing ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              type={isPasswordShowing ? 'text' : 'password'}\r\n              label=\"Пароль\"\r\n            />\r\n          </Box>\r\n          <br />\r\n          <Box mb={3}>\r\n            <Button\r\n              type=\"submit\"\r\n              onClick={submitHandler}\r\n              className={classes.loginButton}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={\r\n                (isLoginDirty && !isLoginValid(loginValue)) ||\r\n                (isPasswordDirty && !isPasswordValid(passwordValue))\r\n              }\r\n              style={{ width: '200px', height: '45px' }}>\r\n              Войти\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n        <Box mt={3} mb={2}>\r\n          <Link to=\"/recover\">Восстановить пароль</Link>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Link to=\"/register\">Регистрация</Link>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Powerslap from '../components/Media/Landing.mp4';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  videoLanding: {\r\n    // position: 'absolute',\r\n    width: '100%',\r\n    // height: '100%',\r\n    // left: '50%',\r\n    // top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LandingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <video autoPlay loop muted className={classes.videoLanding}>\r\n        <source src={Powerslap} type=\"video/mp4\" />\r\n      </video>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Box, Typography, TextField } from '@material-ui/core';\r\n\r\nfunction MetricsPage1(props) {\r\n  const [MetricHeight, setMetricHeight] = React.useState('');\r\n  const [MetricWeight, setMetricWeight] = React.useState('');\r\n  const [MetricAge, setMetricAge] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    props.DataMetricsUser['MetricHeight'] = MetricHeight;\r\n    props.DataMetricsUser['MetricWeight'] = MetricWeight;\r\n    props.DataMetricsUser['MetricAge'] = MetricAge;\r\n\r\n    if ((MetricAge !== '') & (MetricWeight !== '') & (MetricHeight !== '')) {\r\n      props.setValidPage(true);\r\n    }\r\n  }, [MetricHeight, MetricWeight, MetricAge]);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        style={{\r\n          maxWidth: '600px',\r\n          fontSize: '20px',\r\n        }}>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Введите данные о себе, чтоб мы могли рассчитать ваши показатели.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Меня создали, чтоб тебе было легче отслеживать свой прогресс.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Расскажите о себе:\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box my={3}>\r\n        <TextField\r\n          value={MetricHeight}\r\n          onChange={(e) => {\r\n            setMetricHeight(e.target.value);\r\n          }}\r\n          required\r\n          id=\"standard-basic\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"false\"\r\n          type=\"number\"\r\n          label=\"Рост\"\r\n        />\r\n      </Box>\r\n      <Box my={3}>\r\n        <TextField\r\n          value={MetricWeight}\r\n          onChange={(e) => {\r\n            setMetricWeight(e.target.value);\r\n          }}\r\n          required\r\n          id=\"standard-basic\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"false\"\r\n          type=\"number\"\r\n          label=\"Вес\"\r\n        />\r\n      </Box>\r\n      <Box my={3}>\r\n        <TextField\r\n          value={MetricAge}\r\n          onChange={(e) => {\r\n            setMetricAge(e.target.value);\r\n          }}\r\n          required\r\n          id=\"standard-basic\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"false\"\r\n          type=\"number\"\r\n          label=\"Возраст\"\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsPage1;\r\n","import React from 'react';\r\nimport { Box, Typography, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nfunction MetricsPage2(props) {\r\n  const [MetricGoal, setMetricGoal] = React.useState('');\r\n\r\n  const onClickHandle = (e) => {\r\n    e.preventDefault();\r\n    setMetricGoal(e.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    props.DataMetricsUser['MetricGoal'] = MetricGoal;\r\n\r\n    if (MetricGoal !== '') {\r\n      props.setValidPage(true);\r\n    }\r\n  }, [MetricGoal]);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        style={{\r\n          maxWidth: '600px',\r\n          fontSize: '20px',\r\n        }}>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Введите данные о себе, чтоб мы могли рассчитать ваши показатели.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Меня создали, чтоб тебе было легче отслеживать свой прогресс.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Ваша цель:\r\n        </Typography>\r\n      </Box>\r\n      <RadioGroup aria-label=\"quiz\" name=\"quiz\">\r\n        <FormControlLabel\r\n          value=\"Похудение\"\r\n          control={<Radio size=\"medium\" onClick={onClickHandle} />}\r\n          label=\"Похудение\"\r\n          className=\"active\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Поддержание фигуры\"\r\n          control={<Radio size=\"medium\" onClick={onClickHandle} />}\r\n          label=\"Поддержание фигуры\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Набор мышечной массы\"\r\n          control={<Radio size=\"medium\" onClick={onClickHandle} />}\r\n          label=\"Набор мышечной массы\"\r\n        />\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsPage2;\r\n","import React from 'react';\r\nimport { Box, FormControlLabel, Typography, Checkbox, RadioGroup } from '@material-ui/core';\r\n\r\nfunction MetricsPage3(props) {\r\n  let MetricHealth = [];\r\n\r\n  // const [MetricHealth, setMetricHealth] = React.useState([]);\r\n\r\n  const onClickHandle = (e) => {\r\n    // e.preventDefault();\r\n\r\n    let collectingHealthMetricsInObject = {\r\n      Problem: e.target.value,\r\n    };\r\n\r\n    if (e.target.checked) {\r\n      MetricHealth.push(collectingHealthMetricsInObject);\r\n      props.DataMetricsUser['MetricHealth'] = MetricHealth;\r\n    } else {\r\n      MetricHealth.splice(MetricHealth.indexOf(collectingHealthMetricsInObject), 1);\r\n      props.DataMetricsUser['MetricHealth'] = MetricHealth;\r\n    }\r\n\r\n    // console.log(e.target.value);\r\n    // console.log(e.target.checked);\r\n\r\n    // console.log(MetricHealth);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        style={{\r\n          maxWidth: '600px',\r\n          fontSize: '20px',\r\n        }}>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Имеютя ли у вас какие либо проблемы со здоровьем?\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Если есть, укажите их в поле ниже.\r\n        </Typography>\r\n        <Box my={6}>\r\n          <RadioGroup aria-label=\"quiz\" name=\"quiz\">\r\n            <FormControlLabel\r\n              value=\"Спина\"\r\n              control={<Checkbox size=\"medium\" onChange={onClickHandle} />}\r\n              label=\"Спина\"\r\n              className=\"active\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Поясница\"\r\n              control={<Checkbox size=\"medium\" onChange={onClickHandle} />}\r\n              label=\"Поясница\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Ноги\"\r\n              control={<Checkbox size=\"medium\" onChange={onClickHandle} />}\r\n              label=\"Ноги\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Руки\"\r\n              control={<Checkbox size=\"medium\" onChange={onClickHandle} />}\r\n              label=\"Руки\"\r\n            />\r\n          </RadioGroup>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsPage3;\r\n","import React from 'react';\r\nimport { Box, Typography, TextField } from '@material-ui/core';\r\n\r\nfunction MetricsPage4(props) {\r\n  const [MetricPushUps, setMetricPushUps] = React.useState('');\r\n  const [MetricPullUps, setMetricPullUps] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    props.DataMetricsUser['MetricPushUps'] = MetricPushUps;\r\n    props.DataMetricsUser['MetricPullUps'] = MetricPullUps;\r\n\r\n    if ((MetricPushUps !== '') & (MetricPullUps !== '')) {\r\n      props.setValidPage(true);\r\n    } else {\r\n      props.setValidPage(false);\r\n    }\r\n  }, [MetricPushUps, MetricPullUps]);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        style={{\r\n          maxWidth: '600px',\r\n          fontSize: '20px',\r\n        }}>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Введите данные о себе, чтоб мы могли рассчитать ваши показатели.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Меня создали, чтоб тебе было легче отслеживать свой прогресс.\r\n        </Typography>\r\n        <Typography variant=\"span\" component=\"h4\">\r\n          Пожалуйста, укажите данные в поле ниже:\r\n        </Typography>\r\n        <Box my={6}>\r\n          <TextField\r\n            value={MetricPushUps}\r\n            onChange={(e) => {\r\n              setMetricPushUps(e.target.value);\r\n            }}\r\n            required\r\n            id=\"standard-basic\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            autoComplete=\"false\"\r\n            fullWidth\r\n            label=\"Максимальное количество отжимания от пола\"\r\n          />\r\n        </Box>\r\n        <Box my={6}>\r\n          <TextField\r\n            value={MetricPullUps}\r\n            onChange={(e) => {\r\n              setMetricPullUps(e.target.value);\r\n            }}\r\n            required\r\n            id=\"standard-basic\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            autoComplete=\"false\"\r\n            fullWidth\r\n            label=\"Максимальное количество подтягивания от перекладины\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsPage4;\r\n","import { Button, ButtonGroup } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function WeekdaysBar({ currentDayIndex, setCurrentDayIndex }) {\r\n  // const weekDays = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\r\n  const weekDays = [\r\n    { text: 'ПН', isPlanDay: true, isActive: true },\r\n    { text: 'ВТ', isPlanDay: false, isActive: false },\r\n    { text: 'СР', isPlanDay: true, isActive: false },\r\n    { text: 'ЧТ', isPlanDay: false, isActive: false },\r\n    { text: 'ПТ', isPlanDay: true, isActive: false },\r\n    { text: 'СБ', isPlanDay: false, isActive: false },\r\n    { text: 'ВС', isPlanDay: false, isActive: false },\r\n  ];\r\n\r\n  return (\r\n    <ButtonGroup\r\n      size=\"large\"\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      aria-label=\"large outlined primary button group\"\r\n      style={{ marginTop: '24px', color: 'red' }}>\r\n      {weekDays.map((item, index) => {\r\n        return (\r\n          <Button\r\n            key={item.text}\r\n            onClick={(e) => setCurrentDayIndex(index)}\r\n            style={\r\n              item.isPlanDay\r\n                ? item.isActive\r\n                  ? { backgroundColor: '#3f51b5', color: 'white' }\r\n                  : { borderRightColor: '#3f51b580' }\r\n                : { color: '#c3c3c3' }\r\n            }\r\n            disabled={!item.isPlanDay}>\r\n            {item.text}\r\n          </Button>\r\n        );\r\n      })}\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CardActionArea,\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport WeekdaysBar from './WeekdaysBar';\r\n\r\nfunction PreSessionPage({\r\n  user,\r\n  trainingPlan,\r\n  setTrainingPlan,\r\n  currentDayIndex,\r\n  setCurrentDayIndex,\r\n}) {\r\n  console.log('trainingPlan', trainingPlan);\r\n  useEffect(() => {\r\n    if (!trainingPlan[currentDayIndex]) {\r\n      console.log('fetch here');\r\n      fetch(\r\n        `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/getPlan/${\r\n          user.activePlanId\r\n        }/${currentDayIndex + 1}/${user.id}`,\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setTrainingPlan((prevState) => {\r\n            const cloneState = JSON.parse(JSON.stringify(prevState));\r\n            cloneState[currentDayIndex] = data;\r\n            console.log('todays training plan: ', cloneState[currentDayIndex]);\r\n            return cloneState;\r\n          });\r\n        });\r\n    }\r\n\r\n    // if (previousTraining.length === 0) {\r\n\r\n    // }\r\n  }, [currentDayIndex]);\r\n\r\n  return (\r\n    <Container pt={10}>\r\n      <Typography variant=\"h4\" component=\"h4\" color=\"textPrimary\">\r\n        <Typography component=\"span\" variant=\"span\" color=\"textSecondary\">\r\n          Большая мышечная группа:\r\n        </Typography>\r\n        {trainingPlan[currentDayIndex]\r\n          ? ' ' + trainingPlan[currentDayIndex].muscleGroupName\r\n          : ' Загрузка'}\r\n      </Typography>\r\n      <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n        Дополнительные: трицепс, предплечье\r\n      </Typography>\r\n      <WeekdaysBar currentDayIndex={currentDayIndex} setCurrentDayIndex={setCurrentDayIndex} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ flexWrap: 'nowrap', overflowX: 'scroll', paddingTop: '48px' }}>\r\n        {!trainingPlan[currentDayIndex] ? (\r\n          <h1>План загружается</h1>\r\n        ) : (\r\n          trainingPlan[currentDayIndex].excercises.map((exerciseItem) => {\r\n            return (\r\n              <Grid style={{ minWidth: '400px' }} item sm={3}>\r\n                {/* <div style={{ height: 240, backgroundColor: '#ececec' }}>\r\n                    <img\r\n                      src=\"http://fitness-app.germanywestcentral.cloudapp.azure.com/Images/%D0%B0%D1%80%D0%B1%D1%83%D0%B7.jpg\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div> */}\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    image\r\n                    // className={classes.media}\r\n                    image={exerciseItem.photo}\r\n                    title=\"Contemplative Reptile\"\r\n                    height=\"250px\"\r\n                  />\r\n                </CardActionArea>\r\n\r\n                <Card style={{ height: '55%' }}>\r\n                  <CardContent style={{ padding: '24px 16px' }}>\r\n                    <Typography\r\n                      my={2}\r\n                      align=\"left\"\r\n                      color=\"textPrimary\"\r\n                      component=\"h5\"\r\n                      variant=\"h5\"\r\n                      paragraph>{`${exerciseItem.name}`}</Typography>\r\n                    <Typography align=\"left\" paragraph color=\"textSecondary\">\r\n                      {exerciseItem.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })\r\n        )}\r\n      </Grid>\r\n      <div style={{ textAlign: 'center', padding: '64px 0' }}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <Link style={{ color: 'inherit' }} to=\"/session\">\r\n            Начать тренировку\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { test: state.user };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PreSessionPage);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 1600,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressMobileStepper({\r\n  handleBack,\r\n  handleNext,\r\n  page,\r\n  pageAmount,\r\n  currentTrainingExercises,\r\n  user,\r\n  trainingPlan,\r\n  currentDayIndex,\r\n  setTonnageAccum,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = () => {\r\n    const clone = currentTrainingExercises.slice().flat(2);\r\n\r\n    const filteredData = clone.filter((item) => (item ? true : false));\r\n\r\n    const requestBody = {\r\n      trainingPlanId: trainingPlan[currentDayIndex].planId,\r\n      muscleGroupId: trainingPlan[currentDayIndex].muscleGroupId,\r\n      exercises: filteredData.map((el) => {\r\n        if (typeof el.kg === 'string') el.kg = 0;\r\n        if (typeof el.quantity === 'string') el.quantity = 0;\r\n        console.log(el);\r\n        return el;\r\n      }),\r\n    };\r\n\r\n    const currentSessionTonnage = requestBody.exercises.reduce(\r\n      (accum, value) => accum + value.kg * value.quantity,\r\n      0,\r\n    );\r\n\r\n    console.log('tonnage', currentSessionTonnage);\r\n    setTonnageAccum(currentSessionTonnage);\r\n\r\n    console.log('requestBody', requestBody);\r\n    try {\r\n      fetch(\r\n        `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/trainingSubmit/${user.id}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify(requestBody),\r\n        },\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"progress\"\r\n      steps={pageAmount}\r\n      position=\"static\"\r\n      activeStep={page}\r\n      className={classes.root}\r\n      backButton={\r\n        <Button variant=\"contained\" size=\"small\" onClick={handleBack} disabled={page === 0}>\r\n          <KeyboardArrowLeft />\r\n          Назад\r\n        </Button>\r\n      }\r\n      nextButton={\r\n        page === pageAmount - 1 ? (\r\n          <Link to=\"/SessionResults\">\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                // handleNext();\r\n                handleSubmit();\r\n              }}\r\n              color=\"primary\"\r\n              variant=\"contained\">\r\n              Завершить\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          </Link>\r\n        ) : (\r\n          <Button size=\"small\" variant=\"contained\" onClick={handleNext}>\r\n            Далее\r\n            <KeyboardArrowRight />\r\n          </Button>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","export let timeInSeconds = 0;\r\n\r\nexport let incTimeInSeconds = () => {\r\n  timeInSeconds += 1;\r\n};\r\n\r\nexport let getTimeInSeconds = () => {\r\n  return timeInSeconds;\r\n};\r\n","import { Paper, Typography } from '@material-ui/core';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { incTimeInSeconds } from '../trainingTime';\r\n\r\nexport default function Timer({ setTrainingTimeInSeconds }) {\r\n  const [hours, setHours] = useState(1);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(15);\r\n\r\n  const [swopWatchInSeconds, setSwopWatchInSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      }\r\n      if (seconds === 0) {\r\n        if (minutes === 0) {\r\n          if (hours > 0) {\r\n            setHours((hours) => hours - 1);\r\n            setMinutes(59);\r\n          }\r\n          if (hours === 0) {\r\n            clearInterval(myInterval);\r\n          }\r\n        } else {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        }\r\n      }\r\n      setSwopWatchInSeconds((seconds) => seconds + 1);\r\n      incTimeInSeconds();\r\n\r\n      // setTrainingTimeInSeconds((seconds) => seconds + 1);\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(myInterval);\r\n      // setTrainingTimeInSeconds(swopWatchInSeconds);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Paper style={{ padding: '16px' }}>\r\n      {minutes === 0 && seconds === 0 && hours === 0 ? (\r\n        <div>Время вышло</div>\r\n      ) : (\r\n        [\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            Оставшееся время тренировки\r\n          </Typography>,\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"textSecondary\"\r\n            align=\"center\"\r\n            style={{ fontFamily: 'sans-serif', marginTop: '8px' }}>\r\n            <AlarmIcon\r\n              fontSize=\"medium\"\r\n              style={{ verticalAlign: 'text-bottom', marginRight: '10px' }}\r\n            />\r\n            {hours}:{minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n          </Typography>,\r\n        ]\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { makeStyles, TableCell, TableRow, TextField } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  customTextField: {\r\n    '& input::placeholder': {\r\n      color: 'green',\r\n      fontWeight: 'bolder',\r\n    },\r\n  },\r\n});\r\n\r\nconst makeDataRow = (kg = 0, quantity = 0, exerciseId) => {\r\n  let stamp = new Date();\r\n\r\n  stamp.setDate(stamp.getDate());\r\n\r\n  const fullDate = `${stamp.getFullYear()}-${\r\n    stamp.getMonth() + 1 < 10 ? '0' + (stamp.getMonth() + 1) : stamp.getMonth() + 1\r\n  }-${stamp.getDate() < 10 ? '0' + stamp.getDate() : stamp.getDate()}T${\r\n    stamp.getHours() < 10 ? '0' + stamp.getHours() : stamp.getHours()\r\n  }:${stamp.getMinutes() < 10 ? '0' + stamp.getMinutes() : stamp.getMinutes()}:${\r\n    stamp.getSeconds() < 10 ? '0' + stamp.getSeconds() : stamp.getSeconds()\r\n  }`;\r\n  return {\r\n    exerciseId,\r\n    kg,\r\n    quantity,\r\n    startTime: fullDate,\r\n    endTime: fullDate,\r\n  };\r\n};\r\n\r\nexport default function DataRow({\r\n  rowIndex,\r\n  prevWeight = 50,\r\n  prevQuantity = 12,\r\n  exerciseId,\r\n  currentTrainingExercises,\r\n  setCurrentTrainingExercises,\r\n  page,\r\n  isDisabled,\r\n  setEnabledRows,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const rowData = currentTrainingExercises[page][rowIndex];\r\n  const [weightValue, setWeightValue] = useState(rowData ? rowData.kg : '');\r\n  const [quantityValue, setQuantityValue] = useState(rowData ? rowData.quantity : '');\r\n\r\n  useEffect(() => {\r\n    setWeightValue(rowData ? rowData.kg : '');\r\n    setQuantityValue(rowData ? rowData.quantity : '');\r\n  }, [page]);\r\n\r\n  const inputChangeHandle = (setStateHandle) => (e) => {\r\n    const inputValue = e.currentTarget.value;\r\n\r\n    if (inputValue.length < 4) setStateHandle(Math.floor(inputValue));\r\n  };\r\n\r\n  return (\r\n    <TableRow key={rowIndex} style={isDisabled ? { backgroundColor: '#f8f8f8' } : null}>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        {rowIndex + 1}\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        <TextField\r\n          disabled={isDisabled}\r\n          onBlur={(e) => {\r\n            if (weightValue && quantityValue) {\r\n              setEnabledRows((prevEnabledRows) => prevEnabledRows + 1);\r\n            }\r\n\r\n            setCurrentTrainingExercises((prevArray) => {\r\n              const cloneArray = JSON.parse(JSON.stringify(prevArray));\r\n              const data = makeDataRow(weightValue || 0, quantityValue || 0, exerciseId);\r\n              cloneArray[page][rowIndex] = data;\r\n              return cloneArray;\r\n            });\r\n          }}\r\n          onChange={inputChangeHandle(setWeightValue)}\r\n          placeholder={prevWeight}\r\n          type=\"number\"\r\n          value={weightValue}\r\n          InputProps={{\r\n            inputProps: {\r\n              max: 999,\r\n              min: 0,\r\n            },\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ width: '80px' }}\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        <TextField\r\n          placeholder={prevQuantity}\r\n          value={quantityValue}\r\n          disabled={isDisabled}\r\n          onBlur={() => {\r\n            if (weightValue && quantityValue) {\r\n              setEnabledRows((prevEnabledRows) => prevEnabledRows + 1);\r\n            }\r\n\r\n            const data = makeDataRow(weightValue || 0, quantityValue || 0, exerciseId);\r\n            setCurrentTrainingExercises((prevArray) => {\r\n              const cloneArray = JSON.parse(JSON.stringify(prevArray));\r\n              cloneArray[page][rowIndex] = data;\r\n              return cloneArray;\r\n            });\r\n          }}\r\n          onChange={inputChangeHandle(setQuantityValue)}\r\n          type=\"number\"\r\n          InputProps={{\r\n            inputProps: {\r\n              max: 99,\r\n              min: 0,\r\n            },\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ width: '80px' }}\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DataTableRow from './DataTableRow';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function TableSession({\r\n  page,\r\n  trainingPlan,\r\n  currentTrainingExercises,\r\n  setCurrentTrainingExercises,\r\n  currentDayIndex,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [enabledRows, setEnabledRows] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setEnabledRows(currentTrainingExercises[page].length + 1);\r\n  }, [page]);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Подход</TableCell>\r\n            <TableCell align=\"right\">Вес, кг</TableCell>\r\n            <TableCell align=\"right\">Количество повторений</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Array.from({ length: trainingPlan[currentDayIndex].excercises[page].setsNumber }).map(\r\n            (_, index) => (\r\n              <DataTableRow\r\n                exerciseId={trainingPlan[currentDayIndex].excercises[page].id}\r\n                rowIndex={index}\r\n                page={page}\r\n                currentTrainingExercises={currentTrainingExercises}\r\n                setCurrentTrainingExercises={setCurrentTrainingExercises}\r\n                isDisabled={index + 1 > enabledRows}\r\n                setEnabledRows={setEnabledRows}\r\n              />\r\n            ),\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Box, Container, Grid, Hidden, Typography } from '@material-ui/core';\r\n\r\nimport StepperProgress from './StepperProgress';\r\nimport Timer from './Timer';\r\nimport TableSession from './TableSession/TableSession';\r\n\r\nconst makeDataRow = (kg = 0, quantity = 0, exerciseId, setsNumber) => {\r\n  let stamp = new Date();\r\n\r\n  stamp.setDate(stamp.getDate());\r\n\r\n  const fullDate = `${stamp.getFullYear()}-${\r\n    stamp.getMonth() + 1 < 10 ? '0' + (stamp.getMonth() + 1) : stamp.getMonth() + 1\r\n  }-${stamp.getDate() < 10 ? '0' + stamp.getDate() : stamp.getDate()}T${\r\n    stamp.getHours() < 10 ? '0' + stamp.getHours() : stamp.getHours()\r\n  }:${stamp.getMinutes() < 10 ? '0' + stamp.getMinutes() : stamp.getMinutes()}:${\r\n    stamp.getSeconds() < 10 ? '0' + stamp.getSeconds() : stamp.getSeconds()\r\n  }`;\r\n\r\n  if (setsNumber === 1) {\r\n    return {\r\n      exerciseId,\r\n      kg: 0,\r\n      quantity: 0,\r\n      startTime: fullDate,\r\n      endTime: fullDate,\r\n    };\r\n  }\r\n\r\n  return {\r\n    exerciseId,\r\n    kg: '',\r\n    quantity: '',\r\n    startTime: fullDate,\r\n    endTime: fullDate,\r\n  };\r\n};\r\n\r\nexport default function SessionPage({\r\n  trainingPlan,\r\n  user,\r\n  setCurrentDayIndex,\r\n  currentDayIndex,\r\n  setTonnageAccum,\r\n  setTrainingTimeInSeconds,\r\n}) {\r\n  let pageAmount = trainingPlan ? trainingPlan[currentDayIndex].excercises.length : 0;\r\n\r\n  const excercisesWithZeroValue = trainingPlan[currentDayIndex].excercises.map((excerciseItem) => {\r\n    return Array(excerciseItem.setsNumber).fill(\r\n      makeDataRow(null, null, excerciseItem.id, excerciseItem.setsNumber),\r\n    );\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [lastTrainingExercises, setLastTrainingExercises] = useState([]);\r\n  const [currentTrainingExercises, setCurrentTrainingExercises] = useState(excercisesWithZeroValue);\r\n\r\n  const [previousTraining, setPreviousTraining] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\r\n        `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/getPreviousTraining/1/3/${user.id}`,\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log('prev training', data);\r\n          setPreviousTraining(data);\r\n        });\r\n    } catch (error) {\r\n      console.log('prev training error', error);\r\n    }\r\n  }, []);\r\n\r\n  const excerciseOnPage = trainingPlan[currentDayIndex].excercises[page];\r\n\r\n  console.log('current:', currentTrainingExercises);\r\n  console.log('trainingPlan', trainingPlan);\r\n\r\n  return (\r\n    <div>\r\n      {!trainingPlan ? (\r\n        <h1>No plan</h1>\r\n      ) : (\r\n        <Container>\r\n          <Grid container spacing={2} style={{ marginBottom: '48px' }}>\r\n            <Grid item md={7} pt={3}>\r\n              <StepperProgress\r\n                handleBack={() => setPage((prevPage) => prevPage - 1)}\r\n                handleNext={() => setPage((prevPage) => prevPage + 1)}\r\n                currentDayIndex={currentDayIndex}\r\n                page={page}\r\n                user={user}\r\n                pageAmount={pageAmount}\r\n                currentTrainingExercises={currentTrainingExercises}\r\n                trainingPlan={trainingPlan}\r\n                setTonnageAccum={setTonnageAccum}\r\n              />\r\n              <Typography component=\"h5\" variant=\"h5\" align=\"center\" color=\"textSecondary\">\r\n                Упражнение {page + 1} / {pageAmount}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={1} implementation=\"css\" smDown component={Hidden} />\r\n            <Grid item md={4} style={{ height: '100%' }}>\r\n              <Timer setTrainingTimeInSeconds={setTrainingTimeInSeconds} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Box my={2}>\r\n                <Typography\r\n                  component=\"h4\"\r\n                  variant=\"h4\"\r\n                  style={{ display: 'block', marginRight: '16px', marginBottom: '16px' }}>\r\n                  {excerciseOnPage.name}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={7} sm-offset={1}>\r\n                {excerciseOnPage.setsNumber === 1 ? (\r\n                  <Typography variant=\"h5\" color=\"textSecondary\">\r\n                    Данное упражнение делается на время\r\n                  </Typography>\r\n                ) : (\r\n                  <TableSession\r\n                    page={page}\r\n                    trainingPlan={trainingPlan}\r\n                    currentTrainingExercises={currentTrainingExercises}\r\n                    setCurrentTrainingExercises={setCurrentTrainingExercises}\r\n                    currentDayIndex={currentDayIndex}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item md={1} implementation=\"css\" smDown component={Hidden} />\r\n\r\n              <Grid item sm={4}>\r\n                <div style={{ height: '100%', backgroundColor: '#ececec' }}></div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, Typography, Box, Card } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\nimport TimelapseTwoToneIcon from '@material-ui/icons/TimelapseTwoTone';\r\nimport FitnessCenterTwoToneIcon from '@material-ui/icons/FitnessCenterTwoTone';\r\n\r\nimport { getTimeInSeconds } from './trainingTime';\r\n\r\nconst motivationalHeadline = ['Превосходно', 'Замечательно', 'Потрясно'];\r\n\r\nconst trainingResults = {\r\n  time: '48 минут',\r\n  calories: '900kk',\r\n  generalTonnage: '850 кг.',\r\n};\r\n\r\nexport default function SesstionResults({ tonnageAccum, TrainingTimeInSeconds }) {\r\n  const [valueRating, setValueRating] = React.useState(4);\r\n\r\n  return (\r\n    <Container style={{ color: '#737473', fontFamily: 'sans-serif MS Sans Serif' }}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        style={{ color: '#689e83', textAlign: 'center', marginBottom: '25px' }}>\r\n        {motivationalHeadline[Math.floor(Math.random() * (0 - 0 + 1)) + 0]}\r\n      </Typography>\r\n      <Card style={{ padding: '80px', color: '#737473', fontFamily: 'sans-serif MS Sans Serif' }}>\r\n        <Box my={10}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            <TimelapseTwoToneIcon style={{ fontSize: 35 }} /> Общее время тренировки составило:{' '}\r\n            <Typography color=\"textSecondary\" variant=\"span\">\r\n              {Math.floor(getTimeInSeconds() / 3600)}:\r\n              {Math.floor(getTimeInSeconds() / 60) < 10\r\n                ? '0' + Math.floor(getTimeInSeconds() / 60)\r\n                : Math.floor(getTimeInSeconds() / 60)}\r\n              :{getTimeInSeconds() % 60}\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* <Box mb={10}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            <WhatshotTwoToneIcon style={{ fontSize: 35 }} /> Сожжено калорий:{' '}\r\n            {trainingResults.calories}\r\n          </Typography>\r\n        </Box> */}\r\n\r\n        <Box mb={10}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            <FitnessCenterTwoToneIcon style={{ fontSize: 35 }} /> Общий тоннаж тренировки:{' '}\r\n            {tonnageAccum} кг\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"subtitle2\" gutterBottom style={{ textAlign: 'center' }}>\r\n          Оцените тренировку:\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            value={valueRating}\r\n            onChange={(event, newValue) => {\r\n              setValueRating(newValue);\r\n            }}\r\n          />\r\n        </Typography>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import { Container, InputLabel, MenuItem, FormControl, Select, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n  Table: {\r\n    display: 'block',\r\n    minWidth: '1200px',\r\n    minHeight: '500px',\r\n    marginBottom: '50px',\r\n    // margin: '0 auto',\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  Header: {\r\n    textAlign: 'center',\r\n    marginBottom: '45px',\r\n  },\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nlet state = {};\r\n\r\nconst ProgressPage = ({ user }) => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [tableState, setTableState] = useState({});\r\n\r\n  const [tableStateWeight, setTableStateWeight] = useState({});\r\n\r\n  const [loading, SetLoading] = useState(false);\r\n\r\n  const [Period, setPeriod] = React.useState(7);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setPeriod(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = {\r\n      UserId: user.id,\r\n      Period: Period,\r\n      Step: 'Day',\r\n    };\r\n\r\n    fetch('http://fitness-app.germanywestcentral.cloudapp.azure.com/api/Tonnage', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        setTimeout(() => SetLoading(true), 800);\r\n\r\n        let arrayLabels = [];\r\n        let arrayData = [];\r\n\r\n        for (let index = 0; index < data.length; index++) {\r\n          arrayLabels.push(data[index].label);\r\n          arrayData.push(data[index].value);\r\n        }\r\n\r\n        state = {\r\n          labels: arrayLabels,\r\n          datasets: [\r\n            {\r\n              label: 'Прогрессия нагрузки, кг',\r\n              fill: false,\r\n              lineTension: 0.5,\r\n              backgroundColor: 'rgba(75,192,192,1)',\r\n              borderColor: 'rgba(0,0,0,1)',\r\n              borderWidth: 2,\r\n              data: arrayData,\r\n            },\r\n          ],\r\n        };\r\n        setTableState(state);\r\n      });\r\n  }, [Period]);\r\n\r\n  useEffect(() => {\r\n    let userData = {\r\n      UserId: user.id,\r\n      Period: Period,\r\n      Step: 'Day',\r\n    };\r\n\r\n    fetch('http://fitness-app.germanywestcentral.cloudapp.azure.com/api/GetWeight', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        setTimeout(() => SetLoading(true), 800);\r\n\r\n        let arrayLabels = [];\r\n        let arrayData = [];\r\n\r\n        for (let index = 0; index < data.length; index++) {\r\n          arrayLabels.push(data[index].label);\r\n          arrayData.push(data[index].value);\r\n        }\r\n        console.log('data[0].label', data[0]);\r\n        // console.log('arrayLabels', arrayLabels);\r\n        // console.log('arrayData', arrayData);\r\n\r\n        console.log('data', data);\r\n\r\n        state = {\r\n          labels: arrayLabels,\r\n          datasets: [\r\n            {\r\n              label: 'Изменение веса тела, кг',\r\n              fill: false,\r\n              lineTension: 0.5,\r\n              backgroundColor: 'rgba(75,192,192,1)',\r\n              borderColor: 'rgba(0,0,0,1)',\r\n              borderWidth: 2,\r\n              data: arrayData,\r\n            },\r\n          ],\r\n        };\r\n        setTableStateWeight(state);\r\n      });\r\n  }, [Period]);\r\n\r\n  return (\r\n    <div class=\"wrapper\">\r\n      {loading === true && Object.keys(data).length ? (\r\n        <div>\r\n          <Container className={classes.Header}>\r\n            {' '}\r\n            <h1>Прогресс</h1>\r\n          </Container>\r\n          <div>\r\n            {' '}\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">Period</InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={Period}\r\n                defaultValue={7}\r\n                onChange={handleChange}>\r\n                <MenuItem value={7}>Неделя</MenuItem>\r\n                <MenuItem value={30}>Месяц</MenuItem>\r\n                <MenuItem value={90}>Три месяца</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Line\r\n            className={classes.Table}\r\n            data={tableState}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Average Rainfall per month',\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right',\r\n              },\r\n            }}\r\n          />\r\n\r\n          <Line\r\n            className={classes.Table}\r\n            data={tableStateWeight}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Average Rainfall per month',\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right',\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className={classes.Loading}>\r\n          <CircularProgress className={classes.BootScreen} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProgressPage;\r\n","import { Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../TrainingPlans/TepmplateTrainCard.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Card: {\r\n    padding: '150px 160px',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.5s',\r\n    background: '#bab5b5',\r\n    boxShadow: '0 0 5px',\r\n    '&:hover': {\r\n      transform: 'scale(1.1)',\r\n    },\r\n  },\r\n  isActiveCard: {\r\n    padding: '150px 160px',\r\n    background: '#5ed95e',\r\n    transition: 'all 0.5s ',\r\n    cursor: 'pointer',\r\n    boxShadow: '0 0 5px ',\r\n    '&:hover': {\r\n      transform: 'scale(1.1)',\r\n    },\r\n  },\r\n  descr: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0,0,0,.5)',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    paddingTop: '80px',\r\n    // display: 'none',\r\n    transition: 'all .5s',\r\n    WebkitTransition: 'all .5s',\r\n    opacity: 0,\r\n    cursor: 'pointer',\r\n  },\r\n  Wrapper: {\r\n    position: 'relative',\r\n    '&:hover descr': {\r\n      display: 'block',\r\n    },\r\n    marginTop: '50px',\r\n  },\r\n  PlanName: {\r\n    fontFamily: 'Times New Roman, Georgia, Serif',\r\n    fontSize: '20px',\r\n    fontWeight: 'bold',\r\n    marginTop: '15px',\r\n    color: 'rgb(60 62 72)',\r\n  },\r\n}));\r\n\r\nlet countBgImage = 0;\r\nlet bgImage = [\r\n  'https://sun9-32.userapi.com/impf/c834304/v834304102/8f9b3/UBTEpiNTr5Y.jpg?size=1920x1080&quality=96&sign=8b133ac63cb03034809dea8196dabba2&type=album',\r\n  'https://sun9-16.userapi.com/impf/c846018/v846018553/45d58/_LoJna0OGqA.jpg?size=1920x1080&quality=96&sign=1c8dd4288fc1212d87d6f737e76ee87b&type=album',\r\n];\r\nexport default function MyTrainingPlan(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (event) => {\r\n    // console.log(event.currentTarget.id);\r\n    props.SetIdPlan(event.currentTarget.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        to={{\r\n          pathname: '/plan',\r\n          propsSearch: props.plan,\r\n          PlanId: props.idPlan,\r\n          currentDayIndex: props.currentDayIndex,\r\n          setCurrentDayIndex: props.setCurrentDayIndex,\r\n          user: props.user,\r\n        }}>\r\n        <div className={`${classes.Wrapper}`}>\r\n          <span id={props.plan.id} onClick={handleClick} className={`${classes.descr} descr`}>\r\n            Нажмите, чтобы перейти к описанию плана\r\n          </span>\r\n          {props.plan.isActive ? (\r\n            <Card\r\n              className={classes.isActiveCard}\r\n              style={{\r\n                backgroundImage: `url(${bgImage[countBgImage++]})`,\r\n                backgroundSize: '100% 100%',\r\n                backgroundRepeat: 'no-repeat',\r\n              }}>\r\n              {/* <img url={props.plan.image} /> */}\r\n            </Card>\r\n          ) : (\r\n            <Card\r\n              className={classes.Card}\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  bgImage[countBgImage === 1 ? --countBgImage : ++countBgImage]\r\n                })`,\r\n                backgroundSize: '100% 100%',\r\n                backgroundRepeat: 'no-repeat',\r\n              }}></Card>\r\n          )}\r\n        </div>\r\n        <span className={classes.PlanName}>{props.plan.name}</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport './ExerciseslnPlan.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\nexport default function ExercisesAccordion({ exercises }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Accordion square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography> {exercises.name} </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{exercises.description}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\n\r\nimport FitnessCenterOutlinedIcon from '@material-ui/icons/FitnessCenterOutlined';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport BathtubIcon from '@material-ui/icons/Bathtub';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ExercisesAccordion from './ExercisesAccordion';\r\n\r\nimport './ExerciseslnPlan.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function ExercisesInPlan({ index, day, trainingPlan }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div class=\"content\">\r\n      <TimelineItem>\r\n        <TimelineSeparator>\r\n          {trainingPlan.trainings[index].length !== 0 ? (\r\n            <TimelineDot style={{ backgroundColor: '#5f66b1' }}>\r\n              <FitnessCenterOutlinedIcon />\r\n            </TimelineDot>\r\n          ) : (\r\n            <TimelineDot style={{ backgroundColor: 'rgb(60 169 144)' }}>\r\n              <BathtubIcon style={{}} />\r\n            </TimelineDot>\r\n          )}\r\n          {trainingPlan.trainings.length - 1 !== index ? <TimelineConnector /> : ''}\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n              {day}\r\n            </Typography>\r\n            <Typography>\r\n              {trainingPlan.trainings[index].length !== 0 ? (\r\n                trainingPlan.trainings[index].map((exercises) => {\r\n                  return <ExercisesAccordion exercises={exercises} />;\r\n                })\r\n              ) : (\r\n                <Typography>Отдых</Typography>\r\n              )}\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport ExercisesInPlan from './ExercisesInPlan';\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function PlanDays({ trainingPlan }) {\r\n  const classes = useStyles();\r\n\r\n  const days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'];\r\n\r\n  return (\r\n    <div>\r\n      {days.map((day, index) => {\r\n        return <ExercisesInPlan index={index} day={day} trainingPlan={trainingPlan} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { Container, Button, Snackbar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport Timeline from '@material-ui/lab/Timeline';\r\n\r\nimport PlanDays from './PlanDays';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  ContainnerExercieses: {\r\n    margin: '20px 15px',\r\n  },\r\n  Header: {\r\n    textAlign: 'center',\r\n    marginBottom: '45px',\r\n  },\r\n  SaveButton: {\r\n    background: '#239546',\r\n  },\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n}));\r\n\r\nexport default function PlanViewer(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trainingPlan, setTrainingPlan] = useState({});\r\n  const [loading, SetLoading] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActivePlan = (e) => {\r\n    fetch(\r\n      `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/ChangeUserActivePlan/${props.location.propsSearch.id}/${props.location.user.id}`,\r\n      {\r\n        method: 'POST',\r\n      },\r\n    ).then((res) => {\r\n      console.log(res.status);\r\n    });\r\n    let newPlan = props.location.propsSearch.id;\r\n    props.location.user.activePlanId = newPlan;\r\n    let updateUser = props.location.user;\r\n    props.setUser(updateUser);\r\n\r\n    setTimeout(() => props.setTrainingPlan([]), 800);\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/GetPlanById/${props.location.propsSearch.id}/${props.location.user.id}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      },\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => setTrainingPlan(data),\r\n        setTimeout(() => SetLoading(true), 800),\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading === true && Object.keys(trainingPlan).length ? (\r\n        <Container pt={10}>\r\n          <Container className={classes.Header}>\r\n            <h1>{trainingPlan.planName}</h1>\r\n            <h2>{trainingPlan.planDescription}</h2>\r\n          </Container>\r\n          <Container className={classes.ContainnerExercieses}>\r\n            <h2>Пример тренировой недели:</h2>\r\n          </Container>\r\n\r\n          <Timeline align=\"alternate\">\r\n            <PlanDays trainingPlan={trainingPlan} />\r\n          </Timeline>\r\n\r\n          <div style={{ textAlign: 'center', marginTop: '25px' }}>\r\n            <Button\r\n              onClick={handleActivePlan}\r\n              className={classes.SaveButton}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              Активировать план\r\n            </Button>\r\n          </div>\r\n          <Snackbar\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              План активирован!\r\n            </Alert>\r\n          </Snackbar>\r\n        </Container>\r\n      ) : (\r\n        <div className={classes.Loading}>\r\n          <CircularProgress className={classes.BootScreen} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Container, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TemplateTrainCard from './TrainingPlans/TemplateTrainCard';\r\nimport PlanViewer from './TrainingPlans/PlanViewer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    marginTop: '40px',\r\n  },\r\n  Heading: {\r\n    // textAlign: 'center',\r\n    display: 'inline-block',\r\n    background: ' #fff',\r\n    marginBottom: '0',\r\n    fontSize: '1.5rem',\r\n    textTransform: 'uppercase',\r\n    padding: '.5rem 1.5rem',\r\n    border: '.125rem solid #3c3e48',\r\n    color: '#3c3e48',\r\n    '&:after': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      background: '#3c3e48',\r\n      height: '.125rem',\r\n      left: 0,\r\n      top: '50%',\r\n      width: '100%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: '-999',\r\n    },\r\n  },\r\n  li: {\r\n    listStyleType: 'none',\r\n    textAlign: 'center',\r\n  },\r\n  headerH1: {\r\n    position: 'relative',\r\n    textAlign: 'center',\r\n    marginTop: '15px',\r\n    marginBottom: '35px',\r\n  },\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n  PlanConstructor: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\n// let plans = [\r\n//   {\r\n//     name: 'Интенсивное снижение веса',\r\n//     id: 1,\r\n//     isActive: false,\r\n//     image: `https://wallpaperscave.ru/images/original/18/03-11/sports-fitness-27570.jpg`,\r\n//     excercises: [\r\n//       {\r\n//         id: 1,\r\n//         name: 'Молотковые сгибания на бицепс',\r\n//         description:\r\n//           'Локти зафиксируйте по бокам туловища, гантели возьмите нейтральным хватом, на выдохе выполните подъем рук почти до уровня плеч, медленно опустите гантели вниз, вернувшись в начальное положение',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 10,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         name: 'Французский жим с гантелей сидя',\r\n//         description:\r\n//           'Жим сидя на скамье выполняется без прогиба в пояснице. Он может быть только небольшим, обусловленным анатомически, выполнять движение «в мост» не следует; Локти разводить не следует, предплечья должны направляться параллельно друг другу; Плечи не должны подниматься вверх, или смещаться вперед и вбок при выполнении жимов;',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 15,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     name: 'Пресс к лету',\r\n//     id: 2,\r\n//     isActive: true,\r\n//     image: `https://wallpaperscave.ru/images/original/18/01-25/sports-fitness-14791.jpg`,\r\n//     excercises: [\r\n//       {\r\n//         id: 3,\r\n//         name: 'Молотковые сгибания на бицепс',\r\n//         description:\r\n//           'Локти зафиксируйте по бокам туловища, гантели возьмите нейтральным хватом, на выдохе выполните подъем рук почти до уровня плеч, медленно опустите гантели вниз, вернувшись в начальное положение',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 10,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         name: 'Французский жим с гантелей сидя',\r\n//         description:\r\n//           'Жим сидя на скамье выполняется без прогиба в пояснице. Он может быть только небольшим, обусловленным анатомически, выполнять движение «в мост» не следует; Локти разводить не следует, предплечья должны направляться параллельно друг другу; Плечи не должны подниматься вверх, или смещаться вперед и вбок при выполнении жимов;',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 15,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     name: 'Экстримальная сгонка',\r\n//     id: 3,\r\n//     isActive: false,\r\n//     image: `https://olympic-lifting.ru/wp-content/uploads/2016/11/maxresdefault.jpg`,\r\n//     excercises: [\r\n//       {\r\n//         id: 5,\r\n//         name: 'Молотковые сгибания на бицепс',\r\n//         description:\r\n//           'Локти зафиксируйте по бокам туловища, гантели возьмите нейтральным хватом, на выдохе выполните подъем рук почти до уровня плеч, медленно опустите гантели вниз, вернувшись в начальное положение',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 10,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//       {\r\n//         id: 6,\r\n//         name: 'Французский жим с гантелей сидя',\r\n//         description:\r\n//           'Жим сидя на скамье выполняется без прогиба в пояснице. Он может быть только небольшим, обусловленным анатомически, выполнять движение «в мост» не следует; Локти разводить не следует, предплечья должны направляться параллельно друг другу; Плечи не должны подниматься вверх, или смещаться вперед и вбок при выполнении жимов;',\r\n//         targetMuscleId: 0,\r\n//         assistantMuscleId: 0,\r\n//         setsNumber: 15,\r\n//         targetMuscle: null,\r\n//         assistantMuscle: null,\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nlet isGoals = {\r\n  Похудение: 'WeightLoss',\r\n  'Набор мышечной массы': 'MuscleGain',\r\n};\r\n\r\nexport default function MyTrainingPlan({\r\n  user,\r\n  setCurrentDayIndex,\r\n  currentDayIndex,\r\n  setUser,\r\n  trainingPlan,\r\n  setTrainingPlan,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [loading, SetLoading] = useState(false);\r\n  const [loading2, SetLoading2] = useState(false);\r\n  const [idPlan, SetIdPlan] = useState(false);\r\n  const [isGoal, setIsGoal] = useState(false);\r\n  const [plans, setPlans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/UserMetrics/${user.id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => setIsGoal(data.metricGoal.toString()),\r\n        setTimeout(() => SetLoading(true), 800),\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/TrainingPlansByCategory/${isGoals[isGoal]}`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setPlans(data);\r\n        },\r\n        setTimeout(() => SetLoading2(true), 800),\r\n      );\r\n    console.log('isGoals[isGoal]', isGoals[isGoal.toString()]);\r\n    console.log('isGoal', isGoal);\r\n  }, [loading]);\r\n\r\n  // if (!idPlan) {\r\n  return (\r\n    <div>\r\n      {loading === true && loading === true ? (\r\n        <div>\r\n          <div className={classes.headerH1}>\r\n            <h1 className={classes.Heading}>Планы тренировок</h1>\r\n          </div>\r\n          <div className={classes.PlanConstructor}>\r\n            <Button disabled size=\"large\" variant=\"contained\" color=\"primary\" disableElevation>\r\n              Конструктор плана\r\n            </Button>\r\n          </div>\r\n          <Container className={`${classes.Container} ContainerLi`}>\r\n            {plans.map((plan) => {\r\n              return (\r\n                <li className={classes.li}>\r\n                  {' '}\r\n                  <TemplateTrainCard\r\n                    user={user}\r\n                    idPlan={idPlan}\r\n                    SetIdPlan={SetIdPlan}\r\n                    plan={plan}\r\n                    plans={plans}\r\n                    setCurrentDayIndex={setCurrentDayIndex}\r\n                    currentDayIndex={currentDayIndex}\r\n                    setUser={setUser}\r\n                    trainingPlan={trainingPlan}\r\n                    setTrainingPlan={setTrainingPlan}\r\n                  />{' '}\r\n                </li>\r\n              );\r\n            })}\r\n          </Container>{' '}\r\n        </div>\r\n      ) : (\r\n        <div className={classes.Loading}>\r\n          <CircularProgress className={classes.BootScreen} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  // } else {\r\n  //   return (\r\n  //     <div>\r\n  //       <PlanViewer id={idPlan} />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n}\r\n","import { Container, Typography, Grid } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport TemplateHistoryTrain from './TemplateHistoryTrain';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { useState, useEffect } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n  SaveButton: {\r\n    margin: '25px 27%',\r\n  },\r\n}));\r\n\r\nexport default function HistoryPage({ user }) {\r\n  const classes = useStyles();\r\n  const [periodValue, setPeriodValue] = useState(90);\r\n  const [value, setValue] = useState(2);\r\n  const [loading, SetLoading] = useState(false);\r\n\r\n  const [objTrain, setObjTrain] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/TrainingHistory/${user.id}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      },\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => setObjTrain(data),\r\n        setTimeout(() => SetLoading(true), 800),\r\n      );\r\n  }, []);\r\n\r\n  var len = 1;\r\n\r\n  var CurrentDate = new Date();\r\n  var days = 86400000;\r\n  var FromDataFormated = new Date(CurrentDate - periodValue * days);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <Container>\r\n          <Typography\r\n            variant=\"h4\"\r\n            gutterBottom\r\n            style={{ textAlign: 'center', color: '#4c3535', marginBottom: '15px' }}>\r\n            История тренировок\r\n          </Typography>\r\n          {objTrain.length > 0 ? (\r\n            <Tabs\r\n              value={value}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              onChange={handleChange}\r\n              aria-label=\"disabled tabs example\">\r\n              <Tab label=\"7 дней\" onClick={() => setPeriodValue(7)}></Tab>\r\n              <Tab label=\"1 месяц\" onClick={() => setPeriodValue(30)}></Tab>\r\n              <Tab label=\"3 месяца\" onClick={() => setPeriodValue(90)}></Tab>\r\n            </Tabs>\r\n          ) : (\r\n            <br />\r\n          )}\r\n          <Grid item xs={12} style={{ marginTop: '50px' }}>\r\n            {objTrain.length !== 0 ? (\r\n              objTrain\r\n                .filter(function (toTrain) {\r\n                  var date = new Date(\r\n                    toTrain.endTime.substr(0, 10).replace(/(\\d+).(\\d+).(\\d+)/, '$1/$2/$3'),\r\n                  );\r\n                  date >= FromDataFormated ? (len = len + 1) : (len = len);\r\n                  return date >= FromDataFormated;\r\n                })\r\n                .map((toTrain) => {\r\n                  return <TemplateHistoryTrain toTrain={toTrain} />;\r\n                })\r\n            ) : (\r\n              <Typography\r\n                variant=\"h4\"\r\n                gutterBottom\r\n                style={{ textAlign: 'center', color: 'green', margintop: '60px' }}>\r\n                Здесь будет история ваших тренировок\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n          {objTrain.length !== 0 ? <Pagination count={Math.floor(len / 5)} size=\"small\" /> : <br />}\r\n        </Container>\r\n      ) : (\r\n        <div className={classes.Loading}>\r\n          <CircularProgress className={classes.BootScreen} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function statusChangePassword({ status }) {\r\n  return (\r\n    <div className={'typewriter'}>\r\n      {status === 200 ? (\r\n        <h1 style={{ color: '#239546' }}> Вы успешно сменили пароль</h1>\r\n      ) : (\r\n        <h1 style={{ color: 'rgb(232 35 35)' }}>\r\n          Неверный код <br />\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Popover,\r\n  Box,\r\n  MenuItem,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport HelpTwoToneIcon from '@material-ui/icons/HelpTwoTone';\r\nimport Image from 'material-ui-image';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StatusChangePassword from './ChangingPassword/StatusChangePassword';\r\n\r\nimport { isPasswordValid } from './Validation/Valid';\r\n\r\nimport './Settings.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    padding: 76,\r\n    fontSize: 86,\r\n  },\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  child: {\r\n    width: '80%',\r\n    marginTop: '10px',\r\n    textAlign: 'end',\r\n  },\r\n  Avatar: {\r\n    padding: '50px  40px',\r\n  },\r\n  Buttons: {\r\n    margin: '50px 0px',\r\n  },\r\n  ButtonExit: {\r\n    input: { textAlign: 'end' },\r\n    marginTop: 15,\r\n    padding: '10px 50px',\r\n    background: ' slategray',\r\n  },\r\n  FormControl: {\r\n    marginTop: '15px',\r\n  },\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  Box: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  HintToMetrica: {\r\n    margin: '28px 14px 0px',\r\n  },\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n  SaveButton: {\r\n    margin: '25px 27%',\r\n    background: '#239546',\r\n  },\r\n  Card: {\r\n    margin: '0 auto',\r\n    color: '#8E8E8E',\r\n    fontFamily: 'Roboto',\r\n    lineHeight: '50px',\r\n    padding: '40px',\r\n    maxWidth: '900px',\r\n    textAlign: 'center',\r\n  },\r\n  ChangeYourPassword: {\r\n    padding: '10px',\r\n    backgroundColor: 'slategray',\r\n  },\r\n}));\r\n\r\nconst Goals = [\r\n  { title: 'Похудение' },\r\n  { title: 'Набор мышечной массы' },\r\n  { title: 'Поддержание фигуры' },\r\n];\r\n\r\nexport default function SettingsPage({ user, setUser }) {\r\n  const classes = useStyles();\r\n\r\n  const [UserMetrics, setUserMetrics] = useState({});\r\n\r\n  const [loading, SetLoading] = useState(false);\r\n\r\n  const [SaveUpdateButton, setSaveUpdateButton] = useState(false);\r\n\r\n  const [isComponentChangePassword, setIsComponentChangePage] = useState(false);\r\n\r\n  const [inputCodeFromEmail, setInputCodeFromEmail] = useState('');\r\n  const [inputPassword1, setinputPassword1] = useState('');\r\n  const [inputPassword2, setinputPassword2] = useState('');\r\n\r\n  const [statusChangePassword, setStatusChangePassword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/UserMetrics/${user.id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => setUserMetrics(data),\r\n        setTimeout(() => SetLoading(true), 800),\r\n      );\r\n  }, [isComponentChangePassword]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  console.log('au', UserMetrics);\r\n\r\n  const updateDataOfUSer = (label, e) => {\r\n    switch (label) {\r\n      case 'Age':\r\n        UserMetrics.metricAge = e.target.value;\r\n        break;\r\n      case 'Weight':\r\n        UserMetrics.metricWeight = e.target.value;\r\n        break;\r\n      case 'Height':\r\n        UserMetrics.metricHeight = e.target.value;\r\n        break;\r\n      case 'Name':\r\n        UserMetrics.name = e.target.value;\r\n        break;\r\n      case 'Goal':\r\n        UserMetrics.metricGoal = e.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setSaveUpdateButton(e.target.value);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenPageCHangePassword = () => {\r\n    let body = {\r\n      Email: user.email,\r\n    };\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/ForgotPassword`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    setIsComponentChangePage((previsComponentChangePassword) => !previsComponentChangePassword);\r\n  };\r\n\r\n  const handleChangePassword = (e) => {\r\n    // e.preventDefault();\r\n    let body = {\r\n      Email: user.email,\r\n      Password: inputPassword1,\r\n      ConfirmPassword: inputPassword1,\r\n      Code: inputCodeFromEmail,\r\n    };\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/ResetPassword`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => {\r\n      setStatusChangePassword(res.status);\r\n    });\r\n  };\r\n\r\n  const sendUpdateDate = (e) => {\r\n    let MetricHealth = [];\r\n\r\n    if (UserMetrics.healthProblems !== null) {\r\n      for (let index = 0; index < UserMetrics.healthProblems.length; index++) {\r\n        let collectingHealthMetricsInObject = {\r\n          Problem: UserMetrics.healthProblems[index],\r\n        };\r\n        MetricHealth.push(collectingHealthMetricsInObject);\r\n      }\r\n      UserMetrics.healthProblems = MetricHealth;\r\n    }\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/UserMetrics/${user.id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(UserMetrics),\r\n    }).then((res) => {\r\n      res.text();\r\n    });\r\n\r\n    setTimeout(() => window.location.reload(), 200);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  if (!isComponentChangePassword) {\r\n    return (\r\n      <div>\r\n        {loading === true && Object.keys(UserMetrics).length ? (\r\n          <Container className={classes.Container}>\r\n            <div className={classes.Avatar}>\r\n              <Avatar className={classes.orange}>{UserMetrics.name[0]}</Avatar>\r\n              <FormControl className={classes.FormControl}>\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Имя</InputLabel>\r\n                <Input\r\n                  id=\"input-with-icon-adornment\"\r\n                  defaultValue={UserMetrics.name}\r\n                  // value={UserMetrics.name}\r\n                  onChange={(e) => updateDataOfUSer('Name', e)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <div className={classes.Buttons}>\r\n                <Button\r\n                  className={classes.ChangeYourPassword}\r\n                  onClick={handleOpenPageCHangePassword}\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  Сменить пароль\r\n                </Button>\r\n\r\n                <Button\r\n                  className={classes.ButtonExit}\r\n                  onClick={() => {\r\n                    localStorage.setItem('user', null);\r\n                    setUser(null);\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  Выйти\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"contentMetrics\"\r\n              style={{ marginLeft: 100, marginTop: 35, display: 'flex', flexWrap: 'wrap' }}>\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Возраст\"\r\n                defaultValue={UserMetrics.metricAge}\r\n                onChange={(e) => updateDataOfUSer('Age', e)}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Вес\"\r\n                defaultValue={UserMetrics.metricWeight}\r\n                onChange={(e) => updateDataOfUSer('Weight', e)}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Рост\"\r\n                defaultValue={UserMetrics.metricHeight}\r\n                onChange={(e) => updateDataOfUSer('Height', e)}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Текущая цель\"\r\n                defaultValue={UserMetrics.metricGoal}\r\n                onChange={(e) => updateDataOfUSer('Goal', e)}>\r\n                {Goals.map((option) => (\r\n                  <MenuItem key={option.title} value={option.title}>\r\n                    {option.title}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Необходимое количество суточной нормы калорий для поставленной цели\"\r\n                value={\r\n                  UserMetrics.metricGoal === 'Похудение'\r\n                    ? UserMetrics.metricWeight * 34 - 900\r\n                    : UserMetrics.metricGoal === 'Набор мышечной массы'\r\n                    ? UserMetrics.metricWeight * 37\r\n                    : 'Не определено'\r\n                }\r\n                fullWidth\r\n              />\r\n\r\n              <Box className={classes.Box}>\r\n                <TextField\r\n                  className={classes.child}\r\n                  id=\"standard-basic\"\r\n                  label=\"Индекс массы тела\"\r\n                  value={(\r\n                    (UserMetrics.metricWeight * 10000) /\r\n                    (UserMetrics.metricHeight * UserMetrics.metricHeight)\r\n                  ).toFixed(1)}\r\n                  fullWidth\r\n                />\r\n\r\n                <HelpTwoToneIcon\r\n                  onMouseEnter={handlePopoverOpen}\r\n                  onMouseLeave={handlePopoverClose}\r\n                  className={classes.HintToMetrica}>\r\n                  <Typography\r\n                    aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                  />\r\n                </HelpTwoToneIcon>\r\n\r\n                <Popover\r\n                  id=\"mouse-over-popover\"\r\n                  className={classes.popover}\r\n                  classes={{\r\n                    paper: classes.paper,\r\n                  }}\r\n                  open={open}\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  onClose={handlePopoverClose}\r\n                  disableRestoreFocus>\r\n                  <Image\r\n                    style={{ height: '100px', width: '380px' }}\r\n                    src=\"https://cf.ppt-online.org/files2/slide/a/AeZGfbFXwigaBvpkrCJM1E6NzmKq4sc3Y8SWtQ0PT5/slide-16.jpg\"\r\n                  />\r\n                </Popover>\r\n              </Box>\r\n\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Пол\"\r\n                defaultValue=\"Male\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Единицы измения\"\r\n                value=\"Кг/см\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={classes.child}\r\n                id=\"standard-basic\"\r\n                label=\"Язык интерфейса\"\r\n                value=\"RU\"\r\n                fullWidth\r\n              />\r\n\r\n              <Button\r\n                disabled={!SaveUpdateButton}\r\n                className={classes.SaveButton}\r\n                size=\"large\"\r\n                onClick={sendUpdateDate}\r\n                variant=\"contained\"\r\n                color=\"primary\">\r\n                Сохранить измнения\r\n              </Button>\r\n            </div>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.Loading}>\r\n            <CircularProgress className={classes.BootScreen} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card style={{ height: '900px' }}>\r\n          <Button\r\n            style={{ margin: '35px', background: 'slategray' }}\r\n            size=\"large\"\r\n            onClick={() => {\r\n              setIsComponentChangePage(\r\n                (previsComponentChangePassword) => !previsComponentChangePassword,\r\n              );\r\n              setStatusChangePassword(false);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\">\r\n            Назад\r\n          </Button>\r\n\r\n          {statusChangePassword !== false ? (\r\n            <div style={{ margin: '0 27%', textAlign: 'center', marginTop: '15%' }}>\r\n              <StatusChangePassword status={statusChangePassword} />\r\n            </div>\r\n          ) : (\r\n            <div className={classes.Card}>\r\n              <h2>\r\n                Хей! <br /> На вашу почту направлен код для подтвержления смены пароля :){' '}\r\n              </h2>\r\n              <form autoComplete=\"off\">\r\n                <Box my={5}>\r\n                  <TextField\r\n                    onChange={(e) => {\r\n                      setInputCodeFromEmail(e.target.value);\r\n                    }}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Код с вашей почты\"\r\n                    variant=\"outlined\"\r\n                    value={inputCodeFromEmail}\r\n                  />\r\n                </Box>\r\n                <Box my={5}>\r\n                  <TextField\r\n                    error={\r\n                      isPasswordValid(inputPassword1)\r\n                        ? inputPassword1 === ''\r\n                          ? false\r\n                          : true\r\n                        : false\r\n                    }\r\n                    onChange={(e) => {\r\n                      isPasswordValid(setinputPassword1(e.target.value));\r\n                    }}\r\n                    helperText={\r\n                      isPasswordValid(inputPassword1) ? (\r\n                        inputPassword1 === '' ? (\r\n                          false\r\n                        ) : (\r\n                          <p>\r\n                            Пароль должен быть не короче\r\n                            <br /> 8 символов и содержать строч-\r\n                            <br />\r\n                            ную и заглавную буквы и цифру\r\n                          </p>\r\n                        )\r\n                      ) : (\r\n                        false\r\n                      )\r\n                    }\r\n                    value={inputPassword1}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Новый пароль\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box>\r\n                <Box my={5}>\r\n                  <TextField\r\n                    onChange={(e) => {\r\n                      setinputPassword2(e.target.value);\r\n                    }}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Повторите пароль\"\r\n                    type=\"password\"\r\n                    value={inputPassword2}\r\n                    error={\r\n                      inputPassword1 !== inputPassword2 && inputPassword2.length > 0 ? true : false\r\n                    }\r\n                    helperText={inputPassword1 !== inputPassword2 ? 'Пароли не совпадают' : false}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box>\r\n              </form>\r\n\r\n              <Button\r\n                size=\"large\"\r\n                onClick={handleChangePassword}\r\n                disabled={\r\n                  inputPassword1 === inputPassword2 &&\r\n                  inputCodeFromEmail.length > 5 &&\r\n                  !isPasswordValid(inputPassword1)\r\n                    ? inputPassword1 === ''\r\n                      ? true\r\n                      : false\r\n                    : true\r\n                }\r\n                variant=\"contained\"\r\n                color=\"primary\">\r\n                Изменить пароль\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport WhatshotTwoToneIcon from '@material-ui/icons/WhatshotTwoTone';\r\nimport FitnessCenterTwoToneIcon from '@material-ui/icons/FitnessCenterTwoTone';\r\nimport TimelapseTwoToneIcon from '@material-ui/icons/TimelapseTwoTone';\r\n\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function TemplateHistoryTrain({ date, tonnage, excercises, timeInSeconds }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        style={{ backgroundColor: '#65666a' }}\r\n        expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\">\r\n        <Typography style={{ color: '#fff' }}>Число: {date}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails style={{ padding: '48px 56px' }}>\r\n        <Grid container>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box>\r\n              <Typography component=\"h6\" variant=\"h4\" color=\"textSecondary\">\r\n                <FitnessCenterTwoToneIcon\r\n                  style={{ verticalAlign: 'initial', color: '#aaa', marginRight: '8px' }}\r\n                />\r\n                {/* <WhatshotTwoToneIcon />\r\n       <TimelapseTwoToneIcon />\r\n       <TodayTwoToneIcon /> */}\r\n                Общий вес: {tonnage} кг\r\n                {/* <FitnessCenterTwoToneIcon /> Мышечная группа: */}\r\n                {/* <WhatshotTwoToneIcon /> Соженно калорий: */}\r\n                {/* <TimelapseTwoToneIcon /> Продолжительность тренировки: */}\r\n                {/* <TodayTwoToneIcon /> Дата : */}\r\n              </Typography>\r\n            </Box>\r\n            <Box my={2}>\r\n              <Typography component=\"h6\" variant=\"h4\" color=\"textSecondary\">\r\n                <AlarmIcon\r\n                  style={{ verticalAlign: 'initial', color: '#999', marginRight: '8px' }}\r\n                />\r\n                {Math.floor(timeInSeconds / 3600)}:\r\n                {timeInSeconds / 60 >= 60 ? timeInSeconds / 60 - 60 : timeInSeconds / 60}:\r\n                {timeInSeconds.toString()[0] + timeInSeconds.toString()[1]}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box style={{ width: '100%' }} px={4}>\r\n            <TableContainer>\r\n              <Table className={classes.table} style={{ width: '100%' }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Упражнение</TableCell>\r\n                    <TableCell align=\"right\">Количество повторений</TableCell>\r\n                    <TableCell align=\"right\">Вес, кг</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {excercises.map((excerciseItem) => {\r\n                    return (\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {excerciseItem.exserciseName}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{excerciseItem.quantity}</TableCell>\r\n                        <TableCell align=\"right\">{excerciseItem.weight}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Box>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import { Container, Typography, Box } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport TemplateHistoryTrain from './HistoryTemplate';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '20% auto',\r\n  },\r\n  SaveButton: {\r\n    margin: '25px 27%',\r\n  },\r\n}));\r\n\r\nexport default function TrainingHistoryPage({ user }) {\r\n  const classes = useStyles();\r\n  const [periodValue, setPeriodValue] = useState(90);\r\n  const [value, setValue] = useState(2);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [trainingDays, setTrainingDays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/TrainingHistory/${user.id}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      },\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTrainingDays(data);\r\n        setIsLoaded(true);\r\n      });\r\n  }, []);\r\n\r\n  let len = 1;\r\n\r\n  let CurrentDate = new Date();\r\n  let days = 86400000;\r\n  let FromDataFormated = new Date(CurrentDate - periodValue * days);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {isLoaded ? (\r\n        <Box>\r\n          <Box mt={4} mb={3}>\r\n            <Typography component=\"h3\" variant=\"h3\">\r\n              История тренировок\r\n            </Typography>\r\n          </Box>\r\n          {trainingDays.reverse().map((historyItem) => {\r\n            const date = historyItem.date.split('T')[0];\r\n\r\n            const tonnage = historyItem.excercises.reduce(\r\n              (accum, value) => accum + value.weight * value.quantity,\r\n              0,\r\n            );\r\n\r\n            return (\r\n              <Box my={2}>\r\n                <TemplateHistoryTrain\r\n                  date={date}\r\n                  tonnage={tonnage}\r\n                  excercises={historyItem.excercises}\r\n                  timeInSeconds={Math.floor(Math.random() * (80 - 45 + 1) + 45) * 60}\r\n                />\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      ) : (\r\n        <div className={classes.Loading}>\r\n          <CircularProgress className={classes.BootScreen} />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport '../components/styleDrawer.css';\r\n\r\nimport TrendingUpOutlinedIcon from '@material-ui/icons/TrendingUpOutlined';\r\nimport OutlinedFlagRoundedIcon from '@material-ui/icons/OutlinedFlagRounded';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport HistoryOutlinedIcon from '@material-ui/icons/HistoryOutlined';\r\n\r\nimport PreSessionPage from './SessionPages/PreSessionPage/PreSessionPage';\r\nimport SessionPage from './SessionPages/SessionPage/SessionPage';\r\nimport SessionResults from './SessionPages/SessionResultsPage';\r\n\r\nimport ProgressPage from '../pages/ProgressPage';\r\nimport MyTrainingPlan from '../pages/MyTrainingPlan';\r\nimport HistoryPage from '../pages/HistoryPage';\r\nimport SettingsPage from '../pages/SettingsPage';\r\nimport PlanViewer from '../pages/TrainingPlans/PlanViewer';\r\n\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport TrainingHistoryPage from './trainingHistory/TrainingHistoryPage';\r\n\r\nconst drawerWidth = 264;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  // menuButton: {\r\n  //   marginRight: 36,\r\n  // },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer({ setUser, user }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [trainingPlan, setTrainingPlan] = useState([]);\r\n  const [currentDayIndex, setCurrentDayIndex] = useState(0);\r\n\r\n  const [tonnageAccum, setTonnageAccum] = useState(0);\r\n  const [TrainingTimeInSeconds, setTrainingTimeInSeconds] = useState(0);\r\n\r\n  const [activeElementMenu, setActiveElementMenu] = React.useState('');\r\n\r\n  const handleDrawerOpen = () => setOpen(true);\r\n  const handleDrawerClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        style={{ backgroundColor: '#3c3e48' }}\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={\r\n              (classes.menuButton,\r\n              {\r\n                [classes.hide]: open,\r\n              })\r\n            }>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Gym App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}>\r\n        <div className={classes.toolbar} style={{ background: '#fff' }}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List style={{ padding: 0 }}>\r\n          <Link to=\"/pre-session\">\r\n            <ListItem\r\n              onClick={() => setActiveElementMenu('/pre-session')}\r\n              selected={activeElementMenu.toString() === '/pre-session'.toString()}\r\n              button\r\n              style={{ height: '56px' }}>\r\n              <ListItemIcon>\r\n                <OutlinedFlagRoundedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Начать тренировку'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/progress\">\r\n            <ListItem\r\n              onClick={() => setActiveElementMenu('/progress')}\r\n              selected={activeElementMenu.toString() === '/progress'.toString()}\r\n              button\r\n              style={{ height: '56px' }}>\r\n              <ListItemIcon>\r\n                <TrendingUpOutlinedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Мой прогресс'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/my-training-plan\">\r\n            <ListItem\r\n              onClick={() => setActiveElementMenu('/my-training-plan')}\r\n              selected={activeElementMenu.toString() === '/my-training-plan'.toString()}\r\n              button\r\n              style={{ height: '56px' }}>\r\n              <ListItemIcon>\r\n                <ExploreOutlinedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'План тренировок'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/training-history\">\r\n            <ListItem\r\n              onClick={() => setActiveElementMenu('/training-history')}\r\n              selected={activeElementMenu.toString() === '/training-history'.toString()}\r\n              button\r\n              style={{ height: '56px' }}>\r\n              <ListItemIcon>\r\n                <HistoryOutlinedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'История тренировок'} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            justifyContent: 'flex-end',\r\n            padding: 0,\r\n          }}>\r\n          <Divider />\r\n          <Link to=\"settings\">\r\n            <ListItem\r\n              onClick={() => setActiveElementMenu('settings')}\r\n              selected={activeElementMenu.toString() === 'settings'.toString()}\r\n              style={{ height: '56px' }}\r\n              button>\r\n              <ListItemIcon>\r\n                <SettingsOutlinedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Настройки'} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n          <Route exact path=\"/progress\" component={() => <ProgressPage user={user} />} />\r\n          <Route\r\n            exact\r\n            path=\"/my-training-plan\"\r\n            component={() => (\r\n              <MyTrainingPlan\r\n                user={user}\r\n                setCurrentDayIndex={setCurrentDayIndex}\r\n                currentDayIndex={currentDayIndex}\r\n                setUser={setUser}\r\n                trainingPlan={trainingPlan}\r\n                setTrainingPlan={setTrainingPlan}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/training-history\"\r\n            component={() => <TrainingHistoryPage user={user} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/plan\"\r\n            component={(props) => (\r\n              <PlanViewer {...props} setUser={setUser} setTrainingPlan={setTrainingPlan} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/settings\"\r\n            component={() => <SettingsPage user={user} setUser={setUser} />}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/pre-session\"\r\n            component={() => (\r\n              <PreSessionPage\r\n                user={user}\r\n                setTrainingPlan={setTrainingPlan}\r\n                trainingPlan={trainingPlan}\r\n                currentDayIndex={currentDayIndex}\r\n                setCurrentDayIndex={setCurrentDayIndex}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/session\"\r\n            component={() => (\r\n              <SessionPage\r\n                trainingPlan={trainingPlan}\r\n                setCurrentDayIndex={setCurrentDayIndex}\r\n                currentDayIndex={currentDayIndex}\r\n                user={user}\r\n                setTonnageAccum={setTonnageAccum}\r\n                setTrainingTimeInSeconds={setTrainingTimeInSeconds}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/SessionResults\"\r\n            component={() => (\r\n              <SessionResults\r\n                tonnageAccum={tonnageAccum}\r\n                TrainingTimeInSeconds={TrainingTimeInSeconds}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport MetricsPage1 from './MetricsPage1';\r\nimport MetricsPage2 from './MetricsPage2';\r\nimport MetricsPage3 from './MetricsPage3';\r\nimport MetricsPage4 from './MetricsPage4';\r\nimport { Card, Button, Box } from '@material-ui/core';\r\n\r\n// import SideMenu from '.../components/AuthedContent';\r\nimport SideMenu from '../../components/AuthedContent';\r\n\r\nfunction RegisterCardPage(props) {\r\n  function handleSubmit(e) {\r\n    // console.log(e);\r\n    console.log(e.target.innerHTML);\r\n    // console.log('myUser', props.user);\r\n\r\n    if (e.target.innerHTML !== 'Завершить') {\r\n      props.setregistrationPage((prevregistrationPage) => {\r\n        props.setValidPage(false);\r\n        return prevregistrationPage + 1;\r\n      });\r\n    } else {\r\n      fetch(\r\n        `http://fitness-app.germanywestcentral.cloudapp.azure.com/api/sendMetrics/${props.user.id}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify(props.DataMetricsUser),\r\n        },\r\n      ).then((res) => {\r\n        // console.log('status', res.status);\r\n        res.text();\r\n      });\r\n      // .then((data) => console.log(data));\r\n\r\n      props.user['isMetrics'] = true;\r\n      props.setisMetricscollected(true);\r\n    }\r\n  }\r\n\r\n  if (props.registrationPage === 3) {\r\n    props.SetButtonNextorEnd('Завершить');\r\n  } else {\r\n    props.SetButtonNextorEnd('Далее');\r\n  }\r\n  if (props.registrationPage === 2) props.setValidPage(true);\r\n\r\n  const arr = [\r\n    <MetricsPage1\r\n      DataMetricsUser={props.DataMetricsUser}\r\n      setMetricObject={props.setMetricObject}\r\n      MetricObject={props.MetricObject}\r\n      validPage={props.validPage}\r\n      setValidPage={props.setValidPage}\r\n    />,\r\n    <MetricsPage2\r\n      DataMetricsUser={props.DataMetricsUser}\r\n      setMetricObject={props.setMetricObject}\r\n      MetricObject={props.MetricObject}\r\n      validPage={props.validPage}\r\n      setValidPage={props.setValidPage}\r\n    />,\r\n    <MetricsPage3\r\n      DataMetricsUser={props.DataMetricsUser}\r\n      setMetricObject={props.setMetricObject}\r\n      MetricObject={props.MetricObject}\r\n      validPage={props.validPage}\r\n      setValidPage={props.setValidPage}\r\n    />,\r\n    <MetricsPage4\r\n      DataMetricsUser={props.DataMetricsUser}\r\n      setMetricObject={props.setMetricObject}\r\n      MetricObject={props.MetricObject}\r\n      validPage={props.validPage}\r\n      setValidPage={props.setValidPage}\r\n    />,\r\n  ];\r\n\r\n  return !props.isMetricscollected ? (\r\n    <Card\r\n      style={{\r\n        marginTop: '150px',\r\n        color: '#hsl(0deg 2% 29%)',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '50px',\r\n        padding: '50px 150px',\r\n        maxWidth: '900px',\r\n        width: '100%',\r\n      }}>\r\n      <Box style={{ float: 'right' }} component=\"span\" m={1}>\r\n        {props.registrationPage + 1} / 4\r\n      </Box>\r\n      {arr[props.registrationPage]}\r\n      {props.registrationPage !== 0 ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ width: '200px' }}\r\n          onClick={() => {\r\n            props.setregistrationPage((prevregistrationPage) => {\r\n              props.setValidPage(false);\r\n              return prevregistrationPage - 1;\r\n            });\r\n          }}>\r\n          Назад\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"contained\" color=\"primary\" disabled style={{ width: '200px' }}>\r\n          Назад\r\n        </Button>\r\n      )}\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ width: '200px', marginLeft: '20px' }}\r\n        disabled={!props.validPage}\r\n        onClick={handleSubmit}>\r\n        {props.ButtonNextorEnd}\r\n      </Button>\r\n    </Card>\r\n  ) : (\r\n    <SideMenu user={props.user} setUser={props.setUser} />\r\n  );\r\n}\r\n\r\nexport default RegisterCardPage;\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport RegisterCardPage from './RegisterCardPage';\r\n\r\nconst DataMetricsUser = {\r\n  MetricHeight: '',\r\n  MetricWeight: '',\r\n  MetricAge: '',\r\n  MetricGoal: '',\r\n  MetricHealth: [],\r\n  MetricPushUps: '',\r\n  MetricPullUps: '',\r\n};\r\n\r\nfunction RegisterMetrics(props) {\r\n  const [registrationPage, setregistrationPage] = React.useState(0);\r\n  const [ButtonNextorEnd, SetButtonNextorEnd] = React.useState('Далее');\r\n\r\n  const [validPage, setValidPage] = React.useState(false);\r\n\r\n  const [isMetricscollected, setisMetricscollected] = React.useState(false);\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        display: ' flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n      <RegisterCardPage\r\n        registrationPage={registrationPage}\r\n        setregistrationPage={setregistrationPage}\r\n        ButtonNextorEnd={ButtonNextorEnd}\r\n        SetButtonNextorEnd={SetButtonNextorEnd}\r\n        DataMetricsUser={DataMetricsUser}\r\n        validPage={validPage}\r\n        setValidPage={setValidPage}\r\n        user={props.user}\r\n        setUser={props.setUser}\r\n        isMetricscollected={isMetricscollected}\r\n        setisMetricscollected={setisMetricscollected}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegisterMetrics;\r\n","import React from 'react';\r\nimport { AppBar, Container, Toolbar, Typography, Button, Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navigation = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: '#3c3e48' }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                Gym App\r\n              </Link>\r\n            </Typography>\r\n            <Box mr={3}>\r\n              <Button color=\"inherit\" variant=\"outlined\">\r\n                <Link to=\"/login\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                  Войти\r\n                </Link>\r\n              </Button>\r\n            </Box>\r\n            <Button color=\"secondary\" variant=\"contained\">\r\n              <Link to=\"/register\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                Регистрация\r\n              </Link>\r\n            </Button>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { Button, TextField, Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { isEmailValid } from '../Validation/Valid';\r\n\r\nexport default function RecoverPasswordPage({ email, setEmail, page, setPage }) {\r\n  const handleSendEmail = () => {\r\n    let body = {\r\n      Email: email,\r\n    };\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/ForgotPassword`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    // .then((res) => console.log('status', res.status))\r\n    // .then((data) => console.log(data));\r\n\r\n    setPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Укажите вашу почту:</h2>\r\n      <Box my={2}>\r\n        <TextField\r\n          required\r\n          id=\"standard-basic\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"off\"\r\n          label=\"Почта\"\r\n          value={email}\r\n          error={isEmailValid(email) ? (email === '' ? false : true) : false}\r\n          onChange={(e) => {\r\n            isEmailValid(setEmail(e.target.value));\r\n          }}\r\n          helperText={\r\n            isEmailValid(email) ? (email === '' ? false : 'Формат example@mail.ru') : false\r\n          }\r\n        />\r\n      </Box>\r\n\r\n      <Button\r\n        size=\"large\"\r\n        onClick={handleSendEmail}\r\n        disabled={!isEmailValid(email) ? (email === '' ? true : false) : true}\r\n        variant=\"contained\"\r\n        color=\"primary\">\r\n        Отправить\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, TextField, Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { isPasswordValid } from '../Validation/Valid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  BootScreen: {\r\n    margin: '5% auto',\r\n  },\r\n}));\r\n\r\nexport default function RecoverPasswordPage({ page, setPage, email }) {\r\n  const classes = useStyles();\r\n\r\n  const [inputCodeFromEmail, setInputCodeFromEmail] = useState('');\r\n  const [inputPassword1, setinputPassword1] = useState('');\r\n  const [inputPassword2, setinputPassword2] = useState('');\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const [statusSend, setstatusSend] = useState(501);\r\n\r\n  const handleChangePassword = (e) => {\r\n    let body = {\r\n      Email: email,\r\n      Password: inputPassword1,\r\n      ConfirmPassword: inputPassword1,\r\n      Code: inputCodeFromEmail,\r\n    };\r\n    fetch(`http://fitness-app.germanywestcentral.cloudapp.azure.com/api/ResetPassword`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => {\r\n      // console.log('status', console.log(res.status));\r\n      setTimeout(() => setstatusSend(res.status), 600);\r\n    });\r\n\r\n    setStatus(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ margin: '35px', background: 'slategray' }}\r\n        size=\"large\"\r\n        onClick={() => setPage(page - 1)}\r\n        variant=\"contained\"\r\n        color=\"primary\">\r\n        Назад\r\n      </Button>\r\n      <form autoComplete=\"off\">\r\n        <Box my={5}>\r\n          <TextField\r\n            onChange={(e) => {\r\n              setInputCodeFromEmail(e.target.value);\r\n            }}\r\n            id=\"outlined-basic\"\r\n            label=\"Код с вашей почты\"\r\n            variant=\"outlined\"\r\n            value={inputCodeFromEmail}\r\n            helperText={\r\n              status === true ? (\r\n                statusSend === 501 ? (\r\n                  <div className={classes.Loading}>\r\n                    <CircularProgress className={classes.BootScreen} />\r\n                  </div>\r\n                ) : statusSend === 200 ? (\r\n                  <h1 style={{ color: '#239546', textAlign: 'center' }}> Успешно </h1>\r\n                ) : (\r\n                  <h1 style={{ color: 'rgb(232 35 35)' }}>\r\n                    Неверный код <br />\r\n                  </h1>\r\n                )\r\n              ) : (\r\n                ''\r\n              )\r\n            }\r\n          />\r\n        </Box>\r\n        <Box my={5}>\r\n          <TextField\r\n            error={isPasswordValid(inputPassword1) ? (inputPassword1 === '' ? false : true) : false}\r\n            onChange={(e) => {\r\n              isPasswordValid(setinputPassword1(e.target.value));\r\n            }}\r\n            helperText={\r\n              isPasswordValid(inputPassword1) ? (\r\n                inputPassword1 === '' ? (\r\n                  false\r\n                ) : (\r\n                  <p>\r\n                    Пароль должен быть не короче\r\n                    <br /> 8 символов и содержать строч-\r\n                    <br />\r\n                    ную и заглавную буквы и цифру\r\n                  </p>\r\n                )\r\n              ) : (\r\n                false\r\n              )\r\n            }\r\n            value={inputPassword1}\r\n            id=\"outlined-basic\"\r\n            label=\"Новый пароль\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n        <Box my={5}>\r\n          <TextField\r\n            onChange={(e) => {\r\n              setinputPassword2(e.target.value);\r\n            }}\r\n            id=\"outlined-basic\"\r\n            label=\"Повторите пароль\"\r\n            type=\"password\"\r\n            value={inputPassword2}\r\n            error={inputPassword1 !== inputPassword2 && inputPassword2.length > 0 ? true : false}\r\n            helperText={inputPassword1 !== inputPassword2 ? 'Пароли не совпадают' : false}\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          onClick={handleChangePassword}\r\n          disabled={\r\n            inputPassword1 === inputPassword2 &&\r\n            status !== true &&\r\n            inputCodeFromEmail.length > 5 &&\r\n            !isPasswordValid(inputPassword1)\r\n              ? inputPassword1 === ''\r\n                ? true\r\n                : false\r\n              : true\r\n          }\r\n          variant=\"contained\"\r\n          color=\"primary\">\r\n          Изменить пароль\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Container, Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputEmailPage from './InputEmailPage';\r\nimport ResetPage from './ResetPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    display: 'flex',\r\n  },\r\n  Card: {\r\n    margin: '0 auto',\r\n    color: '#8E8E8E',\r\n    fontFamily: 'Roboto',\r\n    lineHeight: '50px',\r\n    padding: '40px',\r\n    maxWidth: '900px',\r\n    textAlign: 'center',\r\n    height: '900px',\r\n  },\r\n}));\r\n\r\nexport default function RecoverPasswordPage() {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState('lol');\r\n  const [page, setPage] = useState(0);\r\n\r\n  // const isPasswordValid = (password) => {\r\n  //   const re = /(?=.*\\d)(?=.*[A-ZА-ЯЁ])(?=.*[a-zа-яё]).{8,}/;\r\n  //   // return re.test(String(email).toLowerCase());\r\n  //   return !re.test(String(password));\r\n  // };\r\n\r\n  const arr = [\r\n    <InputEmailPage email={email} setEmail={setEmail} page={page} setPage={setPage} />,\r\n    <ResetPage page={page} setPage={setPage} email={email} />,\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Container className={classes.Container}>\r\n        <Card className={classes.Card}>{arr[page]}</Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport RegistrationPage from './pages/RegisterPage/RegistrationPage';\r\nimport LoginPage from './pages/LoginPage/LoginPage';\r\nimport LandingPage from './pages/LandingPage';\r\nimport RegisterMetrics from './pages/RegisterMetrics/RegisterMetrics';\r\n\r\nimport Navigation from './components/Navigation';\r\nimport SideMenu from './components/AuthedContent';\r\n\r\nimport './global.css';\r\n\r\nimport RecoverPasswordPage from './pages/RecoverPassword/RecoverPasswordPage';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const localUser = JSON.parse(localStorage.getItem('user'));\r\n    if (localUser) {\r\n      if (localUser['name']) localUser['isMetrics'] = true;\r\n      setUser(localUser);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ height: '100vh' }}>\r\n      {user ? (\r\n        user['isMetrics'] === true ? (\r\n          <SideMenu user={user} setUser={setUser} />\r\n        ) : (\r\n          <RegisterMetrics user={user} setUser={setUser} />\r\n        )\r\n      ) : (\r\n        <Navigation />\r\n      )}\r\n      <Switch>\r\n        <div className=\"wrapper\">\r\n          {!user\r\n            ? [\r\n                <Route exact path=\"/\" component={LandingPage} />,\r\n                <Route exact path=\"/login\" component={() => <LoginPage setUser={setUser} />} />,\r\n                <Route exact path=\"/register\" component={RegistrationPage} />,\r\n\r\n                <Route path=\"/register-metrics\" component={RegisterMetrics} />,\r\n\r\n                <Route path=\"/recover\" component={RecoverPasswordPage} />,\r\n              ]\r\n            : []}\r\n        </div>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { SET_USER, TRAINING_DAY_EXERCISES_LOADED, SET_LAST_TRAINING_BY_DAY } from '../actionTypes';\r\n\r\n// import trainingPlanReducer from './trainingPlan';\r\n\r\nconst userReducer = (state = { id: 1 }, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return { ...state, user: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst trainingPlanReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case TRAINING_DAY_EXERCISES_LOADED:\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst lastTrainingReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_LAST_TRAINING_BY_DAY:\r\n      return { ...state, last_training: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  trainingPlan: trainingPlanReducer,\r\n  lastTraining: lastTrainingReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const SET_USER = 'SET_USER';\r\nexport const TRAINING_DAY_EXERCISES_LOADED = 'TRAINING_DAY_EXERCISES_LOADED';\r\nexport const SET_LAST_TRAINING_BY_DAY = 'SET_LAST_TRAINING_BY_DAY';\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => console.log('store: ', store.getState()));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}